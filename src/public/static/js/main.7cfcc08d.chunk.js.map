{"version":3,"sources":["redux/constants.ts","components/AdminPanel/AdminPanel.tsx","components/AdminPanel/Products/ProductsList/ProductsList.tsx","components/AdminPanel/Products/Products.tsx","utils/colors.js","components/Spinner/Spinner.tsx","components/AdminPanel/Users/Users.tsx","utils/get-random-id.js","components/Modal/ModalDeleteUser.tsx","components/UserOrders/OrderItem/OrderItem.tsx","components/AdminPanel/Users/CurrentUser.tsx","components/Basket/BasketInformation/BasketInformation.tsx","components/Basket/ProductBasket/PriceAndCountInfo.tsx","components/Basket/ProductBasket/ProductInBasket.tsx","components/Basket/Basket.tsx","utils/get-date.ts","utils/validate-email-order.ts","utils/validate-name-order.ts","utils/validate-phone-order.ts","components/Modal/ModalOrder.tsx","components/Modal/ModalProductView.tsx","components/Main/MainContent/Product.tsx","components/Category/Category.tsx","utils/get-random-number.js","utils/carousel-list.js","components/Main/Carousel/Carousel.tsx","components/Main/MainContent/MainContent.tsx","components/Main/Main.tsx","components/UserOrders/UserOrder.tsx","components/AppRouter.tsx","components/Modal/ModalAuthorMessage.tsx","components/Footer/Footer.tsx","components/Header/HeaderAdmin/HeaderAdmin.tsx","components/Modal/ModalLoginUsers/ModalLoginUser.tsx","components/Modal/ModalLoginUsers/ModalRegistrationUser.tsx","components/Modal/ModalLogin.tsx","components/Header/HeaderUser/Category/Category.tsx","components/Header/HeaderUser/HeaderUser.tsx","components/Header/Header.tsx","components/SideMenu/SideMenu.tsx","App.tsx","redux/reducers/CategoriesReducer.ts","utils/discounts.js","redux/reducers/AppReducer.ts","redux/reducers/ProductReducer.ts","redux/reducers/LoginReducer.ts","redux/reducers/AdminReducer.ts","redux/sagas/CategoriesSaga.tsx","redux/sagas/ProductSaga.tsx","utils/get-order-data.ts","redux/sagas/AppSaga.tsx","utils/settings-file.ts","redux/sagas/LoginUserSaga.tsx","redux/sagas/RegistrationUserSaga.tsx","redux/sagas/SendMessageToAuthorSaga.tsx","redux/sagas/AdminSaga/AdminProductSaga.tsx","redux/sagas/AdminSaga/AdminChangeAccDataSaga.tsx","redux/sagas/AdminSaga/AdminUsersSaga.tsx","redux/sagas/AdminSaga/AdminDeleteUserSaga.tsx","redux/sagas/UserSaga/CreateOrderOnServerSaga.tsx","redux/sagas/UserSaga/GetUserOrdersSaga.tsx","redux/store.ts","index.tsx"],"names":["ACTIONS_APP","ACTIONS_CATEGORIES","ACTIONS_PRODUCTS","ACTIONS_LOGIN","ACTIONS_ADMIN_DATA","AdminPanelContent","styled","section","HeaderAdminPanel","h1","Button","button","ChangeDataContainer","div","Text","p","Input","input","ButtonSave","props","isCheckedAllData","ChangedAccountAdminInfo","isChangedSaves","AdminPanel","useState","isChangeLoginData","setIsChangeLoginData","setSsCheckedAllData","isServerResponse","setIsServerResponse","oldPassword","setOldPassword","newLogin","setNewLogin","newPassword","setNewPassword","newPasswordOnceMore","setNewPasswordOnceMore","dispatch","useDispatch","changeAccDataInfo","useSelector","store","adminReducer","changeAccAdminInfo","errorChangeAccData","error","useEffect","type","CHANGE_ACCOUNT_DATA_FAILURE","CHANGE_ACCOUNT_DATA_SUCCESS","length","onClick","onChange","event","target","value","newAccAdmin","CHANGE_ACCOUNT_DATA","ProductContainer","ImgContainer","ImgProduct","img","ProductInformation","Category","Title","Description","Price","ProductsList","title","category","image","description","price","src","ProductsContainer","HeaderProducts","NameSearch","Search","ProductListContainer","Products","productsList","products","setProducts","inputFindProduct","setInputFindProduct","GET_PRODUCTS_ADMIN","newProducts","filter","elem","includes","map","product","id","mainColor","backgroundColor","CustomSpinner","Spinner","UsersContainer","HeaderUsers","TableContainer","Table","table","Thead","thead","Th","th","ThNumber","Tr","tr","TrData","Td","td","UsersSearch","Users","history","useHistory","usersList","searchedUser","setSearchedUser","sortedUserList","setSortedUserList","sortDirection","setSortDirection","sortBy","sortedList","arr","sort","a","b","sortData","newUsersList","user","email","firstName","lastName","setTimeout","GET_USERS_ADMIN","GET_USERS_SUCCESS_ADMIN","searchInputValue","index","userEmail","push","getID","Math","random","toString","substr","Background","ContentContainer","Information","UserInformation","span","ButtonContainer","ButtonAction","ErrorMessage","InformationMessage","onClickContent","e","stopPropagation","ModalDeleteUser","closeModalDeleteUser","idDeletedUser","errorMessage","isUserDelete","setIsUserDelete","information","DELETE_USER_SUCCESS","DELETE_USER_FAILURE","DELETE_USER","disabled","OrderItemContainer","InfoContainer","OrderContent","OrderHeader","h2","ProductItemContainer","Count","OrderItem","orderItem","date","totalMoney","order","count","UserContainer","UserInfoWrapper","UserHeader","UserInfo","UserOrdersInfo","OrdersInfo","CurrentUser","currentUser","setCurrentUser","isDeleteUserModalOpen","setIsDeleteUserModalOpen","params","useParams","findedUser","find","password","orders","item","StickyContainer","TotalInformationContainer","DiscountContainer","DiscountText","DiscrountInput","DiscountButton","PriceAndOrderContainer","PriceContainer","PriceInfo","Discount","GetOrderButton","BasketHeader","BasketInformation","countOfMoney","setCountOfMoney","discountInput","setDiscountInput","counfOfMoneyWithoutDiscount","setCounfOfMoneyWithoutDiscount","listDicsountCode","appReducer","productsInBasket","currentAppliedDiscount","currentDiscount","totalPrice","reduce","acc","toFixed","orderTotalMoney","ORDER_TOTAL_MONEY","get","alert","newCountOfMoney","SET_DISCOUNT","IS_OPEN_MODAL_ORDER","PriceAndCountContainer","PriceText","CountInfoContainer","MinusCount","PlusCount","PriceAndCountInfo","countProduct","setCountProduct","totalPriceForProduct","setTotalPriceForProduct","newCount","idChangedProduct","MINUS_COUNT_PRODUCT","PLUS_COUNT_PRODUCT","BasketStyle","position","fontSize","color","top","right","cursor","zIndex","ProductInBasket","icon","faTimes","style","deleteSelectedProduct","DELETE_PRODUCT","BasketContainer","Basket","checkLength","regEmail","checkEmail","test","bannedSymbols","checkNameLength","regMobile","regNumbersAndSpace","Container","CloseButton","OrderInfo","NameContainer","NameInfo","NameInput","isValidName","EmailInput","isValidEmail","PhoneInput","isValidPhone","ButtonSubmit","isAllInputsValid","ModalOrder","textOrderStatus","orderStatus","textOrderError","orderError","useFullName","loginReducer","userFullName","emailOfUser","isUserLogin","userName","setUserName","setUserEmail","userPhone","setUserPhone","setIsValidName","setIsValidEmail","setIsValidPhone","setIsAllInputsValid","closeModal","CLEAR_BASKET","SEND_INFO_TG_SUCCESS","SEND_INFO_TG_FAILURE","isNameValid","result","i","checkNameLetters","slice","isEmailValid","checkPhoneSymbols","isPhoneValid","checkPhone","placeholder","filteredProduct","filteredElem","Date","year","getFullYear","month","getMonth","day","getDate","hours","getHours","min","getMinutes","userOrders","phone","CREATE_ORDER_ON_SERVER","userInfo","name","SEND_INFO_TG_REQUEST","Img","TitleProduct","ModalProductView","closeModalView","imgSrc","CardContainer","CategoryContainer","ContainerBuying","Product","isOpenModalProductView","setIsOpenModalProductView","isIdInBasket","setIsIdInBasker","listProductInBasket","isProductInBasket","some","faMinusSquare","className","faCartPlus","ADD_PRODUCT","addSelectedProduct","ProductsCategoryContainer","allProducts","productReducer","productInCategory","setProductInCategory","filteredProducts","randomInteger","max","rand","floor","getRandomProducts","carouselList","CarouselContainer","ImgShop","CarouselWrapper","ArrowsContainer","styleArrow","sliceLastPxFromValue","moveCarouselContainerRight","element","ShadowWrapper","Carousel","leftCoordWrapper","setLeftCoordWrapper","refCarouselWrapper","useRef","refCarouselContainer","pos","current","offsetLeft","left","intervalId","setInterval","carousel","console","log","clearInterval","ref","moveCarouselContainerLeft","faChevronLeft","faChevronRight","Header","ButtonGetRandom","getArrRandomProducts2","arrProducts","arrIndex","randomProductArr","forEach","MainContent","listProducts","randomIndexes","randomProducts","setRandomProducts","RANDOM_INDEXS","MainContainer","main","Main","GET_CATEGORIES","GET_PRODUCTS","OrderContainer","OrdersHeader","EmptyOrderText","UserOrder","GET_USER_ORDERS","AppRouter","isAdminLogin","exact","path","to","TextArea","textarea","ModalAuthorMessage","closeModalAuthorMessage","message","setMessage","SEND_MESSAGE_TO_AUTHOR_SUCCESS","SEND_MESSAGE_TO_AUTHOR","sendMessageAuthor","FooterContaier","footer","LogoGithubLink","LogoTeachMeSkills","Link","WriteContainer","Footer","isOpenAuthorMessageModal","setIsOpenAuthorMessageModal","href","LoginContainer","LogoutContainer","Ul","ul","Li","li","CustomNavLink","NavLink","HeaderAdmin","activeClassName","APP_LOGOUT_ADMIN","InfoText","InputLoginInfo","ChangeModalType","ModalLoginUser","closeModalLogin","changeModalType","setLogin","setPassword","refInput","focus","pressEnter","ev","key","existUserInfo","APP_LOGIN_EXIST_USER","window","addEventListener","APP_LOGIN_FAILURE","removeEventListener","loginExistUser","ButtonLogin","isTrueData","ModalRegistrationUser","newUserData","setNewUserData","setIsTrueData","isTrueErrorMessage","setIsTrueErrorMessage","loginNewUser","APP_LOGIN_NEW_USER","newUserInfo","inputOnChange","ModalLogin","newUser","setNewUser","CategoriesSideMenu","SelectedCategorySideMenu","CategoriesHeader","SelectedCategoryHeader","catName","selectCategory","isHeader","isCurrentCategory","setIsCurrentCategory","goToCategory","currentCategory","CURRENT_CATEGORY","HeaderContaier","header","HeaderContent","HomeStyle","CountProductInBasket","UserLoginContainer","LoginContainerWithUserName","OrdersContainer","Logo","HeaderUser","categories","categoriesReducer","userData","isLoginModalOpen","setIsOpenModalOpen","goMainPage","faHome","faShoppingBasket","split","join","APP_LOGOUT_USER","LOGOUT_USER","SideMenuContainer","nav","scroll","isFreezeSideMenu","LockContainer","CategoriesContainer","faLockStyle","transition","SideMenu","setScroll","handleScroll","scrollY","FREEZE_SIDE_MENU","faLock","faLockOpen","App","isOpenModalOrder","defaultState","Map","categoriesList","changeAccAdminStatus","getCategories","getCategoriesSaga","fetch","response","json","put","GET_CATEGORIES_SUCCESS","GET_CATEGORIES_FAILURE","takeEvery","getProduct","getProductsSaga","GET_PRODUCTS_SUCCESS","GET_PRODUCTS_FAILURE","getOrderDataForTg","getOrderString","sendInfoTg","sendOrderInfoTg","action","text","chat_id","parse_mode","data","JSON","stringify","JSONdata","method","headers","body","request","answer","ok","Error","urlNow","loginSaga","loginUserSaga","mode","serverResponse","responseData","ADMIN_LOGIN_SUCCESS","USER_LOGIN_SUCCESS","loginInfoData","registrationSaga","registrationUserSaga","responseServer","sendMessageToAuthor","sendMessageToAuthorSaga","getProducts","getProductsAdminSaga","GET_PRODUCTS_SUCCESS_ADMIN","GET_PRODUCTS_FAILURE_ADMIN","changeAccAdminData","changeAccAdminDataSaga","operationStatus","infoMessage","errMessage","getUsersAdmin","getUsersAdminSaga","GET_USERS_FAILURE_ADMIN","deleteUserAdmin","deleteUserAdminSaga","responseJson","createOrderOnSerer","createOrderOnServerSaga","userOrder","getUserOrders","getUsersOrdersSaga","GET_USER_ORDERS_SUCCESS","GET_USER_ORDERS_FAILURE","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","state","updatedArr","newBasketProduct","updatedCountOfProduct","applyMiddleware","run","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7cfcc08d.chunk.js","sourcesContent":["import { ICategoriesReducer, IProductReducer, IAppReducer, IAdminReducer } from './reducers';\nimport { ILoginReducer } from './reducers/LoginReducer';\n\nexport enum ACTIONS_APP {\n  FREEZE_SIDE_MENU = 'FREEZE_SIDE_MENU',\n  RANDOM_INDEXS = 'RANDOM_INDEXS',\n  ADD_PRODUCT = 'ADD_PRODUCT',\n  DELETE_PRODUCT = 'DELETE_PRODUCT',\n  CLEAR_BASKET = 'CLEAR_BASKET',\n  CURRENT_CATEGORY = 'CURRENT_CATEGORY',\n  SET_DISCOUNT = 'SET_DISCOUNT',\n  PLUS_COUNT_PRODUCT = 'PLUS_COUNT_PRODUCT',\n  MINUS_COUNT_PRODUCT = 'MINUS_COUNT_PRODUCT',\n  IS_OPEN_MODAL_ORDER = 'IS_OPEN_MODAL_ORDER',\n  SEND_INFO_TG_SUCCESS = 'SEND_INFO_TG_SUCCESS',\n  SEND_INFO_TG_FAILURE = 'SEND_INFO_TG_FAILURE',\n  SEND_INFO_TG_REQUEST = 'SEND_INFO_TG',\n  ORDER_TOTAL_MONEY = 'ORDER_TOTAL_MONEY',\n  CREATE_ORDER_ON_SERVER = 'CREATE_ORDER_ON_SERVER',\n  GET_USER_ORDERS = 'GET_USER_ORDERS',\n  GET_USER_ORDERS_SUCCESS = 'GET_USER_ORDERS_SUCCESS',\n  GET_USER_ORDERS_FAILURE = 'GET_USER_ORDERS_FAILURE',\n  LOGOUT_USER = 'LOGOUT_USER',\n  SEND_MESSAGE_TO_AUTHOR = 'SEND_MESSAGE_TO_AUTHOR',\n  SEND_MESSAGE_TO_AUTHOR_SUCCESS = 'SEND_MESSAGE_TO_AUTHOR_SUCCESS',\n}\n\nexport enum ACTIONS_CATEGORIES {\n  GET_CATEGORIES = 'GET_CATEGORIES',\n  GET_CATEGORIES_SUCCESS = 'GET_CATEGORIES_SUCCESS',\n  GET_CATEGORIES_FAILURE = 'GET_CATEGORIES_FAILURE',\n}\n\nexport enum ACTIONS_PRODUCTS {\n  GET_PRODUCTS = 'GET_PRODUCTS',\n  GET_PRODUCTS_SUCCESS = 'GET_PRODUCTS_SUCCESS',\n  GET_PRODUCTS_FAILURE = 'GET_PRODUCTS_FAILURE',\n}\n\nexport enum ACTIONS_LOGIN {\n  APP_LOGIN_NEW_USER = 'APP_LOGIN_NEW_USER',\n  APP_LOGIN_EXIST_USER = 'APP_LOGIN_EXIST_USER',\n  APP_LOGOUT_ADMIN = 'APP_LOGOUT_ADMIN',\n  USER_LOGIN_SUCCESS = 'USER_LOGIN_SUCCESS',\n  NEW_USER_LOGIN_SUCCESS = 'NEW_USER_LOGIN_SUCCESS',\n  ADMIN_LOGIN_SUCCESS = 'ADMIN_LOGIN_SUCCESS',\n  APP_LOGIN_FAILURE = 'APP_LOGIN_FAILURE',\n  APP_LOGOUT_USER = 'APP_LOGOUT_USER',\n}\n\nexport enum ACTIONS_ADMIN_DATA {\n  GET_PRODUCTS_ADMIN = 'GET_PRODUCTS_ADMIN',\n  GET_PRODUCTS_SUCCESS_ADMIN = 'GET_PRODUCTS_SUCCESS_ADMIN',\n  GET_PRODUCTS_FAILURE_ADMIN = 'GET_PRODUCTS_FAILURE_ADMIN',\n  GET_USERS_ADMIN = 'GET_USERS_ADMIN',\n  GET_USERS_SUCCESS_ADMIN = 'GET_USERS_SUCCESS_ADMIN',\n  GET_USERS_FAILURE_ADMIN = 'GET_USERS_FAILURE_ADMIN',\n  CHANGE_ACCOUNT_DATA = 'CHANGE_ACCOUNT_DATA',\n  CHANGE_ACCOUNT_DATA_SUCCESS = 'CHANGE_ACCOUNT_DATA_SUCCESS',\n  CHANGE_ACCOUNT_DATA_FAILURE = 'CHANGE_ACCOUNT_DATA_FAILURE',\n  DELETE_USER = 'DELETE_USER',\n  DELETE_USER_SUCCESS = 'DELETE_USER_SUCCESS',\n  DELETE_USER_FAILURE = 'DELETE_USER_FAILURE',\n}\n\nexport interface IStore {\n  categoriesReducer: ICategoriesReducer;\n  productReducer: IProductReducer;\n  appReducer: IAppReducer;\n  loginReducer: ILoginReducer;\n  adminReducer: IAdminReducer;\n}\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_ADMIN_DATA, IStore } from '../../redux/constants';\r\nimport { INewAccAdmin } from '../../utils/interfaces';\r\n\r\nconst AdminPanelContent = styled.section`\r\n  width: 100%;\r\n  margin: 50px auto;\r\n  min-height: calc(100vh - 150px);\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderAdminPanel = styled.h1`\r\n  padding: 30px 0;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  height: 50px;\r\n  font-size: 18px;\r\n  padding: 5px 15px;\r\n  margin-bottom: 30px;\r\n`;\r\nconst ChangeDataContainer = styled.div`\r\n  display: flex;\r\n  margin: 10px 0;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 20px;\r\n  width: 100px;\r\n  margin-right: 25px;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  width: 150px;\r\n  height: 26px;\r\n  padding-left: 15px;\r\n  font-size: 17px;\r\n`;\r\n\r\ninterface IButtonSave {\r\n  isCheckedAllData: boolean;\r\n}\r\n\r\nconst ButtonSave = styled.button<IButtonSave>`\r\n  font-size: 18px;\r\n  padding: 5px 15px;\r\n  margin-top: 30px;\r\n  ${(props) => (props.isCheckedAllData ? '' : 'opacity: 0.5; pointer-events: none')}\r\n`;\r\n\r\ninterface IChangedAccointAdminInfo {\r\n  isChangedSaves: boolean;\r\n}\r\n\r\nconst ChangedAccountAdminInfo = styled.p<IChangedAccointAdminInfo>`\r\n  font-size: 20px;\r\n  margin: 20px 0 0;\r\n  ${({ isChangedSaves }): string => (isChangedSaves ? 'color: green' : 'color: red')}\r\n`;\r\n\r\nexport const AdminPanel = (): JSX.Element => {\r\n  const [isChangeLoginData, setIsChangeLoginData] = useState(false);\r\n  const [isCheckedAllData, setSsCheckedAllData] = useState(false);\r\n  const [isServerResponse, setIsServerResponse] = useState(false);\r\n  const [oldPassword, setOldPassword] = useState('');\r\n  const [newLogin, setNewLogin] = useState('');\r\n  const [newPassword, setNewPassword] = useState('');\r\n  const [newPasswordOnceMore, setNewPasswordOnceMore] = useState('');\r\n  const dispatch = useDispatch();\r\n  const changeAccDataInfo = useSelector((store: IStore) => store.adminReducer.changeAccAdminInfo);\r\n  const errorChangeAccData = useSelector((store: IStore) => store.adminReducer.error);\r\n\r\n  const handleChangePassword = (): void => {\r\n    setIsChangeLoginData(!isChangeLoginData);\r\n  };\r\n\r\n  const setStateOldPassword = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setOldPassword(event.target.value);\r\n  };\r\n\r\n  const setStateNewLogin = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setNewLogin(event.target.value);\r\n  };\r\n\r\n  const setStateNewPassword = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setNewPassword(event.target.value);\r\n  };\r\n  const setStateNewPasswordOnceMore = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setNewPasswordOnceMore(event.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setIsServerResponse(false);\r\n    setIsChangeLoginData(false);\r\n    const error = '';\r\n    dispatch({ type: ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA_FAILURE, error });\r\n    const changeAccAdminInfo = '';\r\n    dispatch({ type: ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA_SUCCESS, changeAccAdminInfo });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      oldPassword.length >= 5 &&\r\n      newLogin.length >= 5 &&\r\n      newPassword.length >= 5 &&\r\n      newPasswordOnceMore.length >= 5 &&\r\n      newPassword === newPasswordOnceMore\r\n    ) {\r\n      setSsCheckedAllData(true);\r\n    }\r\n  }, [oldPassword, newLogin, newPassword, newPasswordOnceMore]);\r\n\r\n  const requestChangePassword = (): void => {\r\n    const error = '';\r\n    dispatch({ type: ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA_FAILURE, error });\r\n    const changeAccAdminInfo = '';\r\n    dispatch({ type: ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA_SUCCESS, changeAccAdminInfo });\r\n    const newAccAdmin = { oldPassword, newLogin, newPassword } as INewAccAdmin;\r\n\r\n    dispatch({ type: ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA, newAccAdmin });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (changeAccDataInfo) {\r\n      setIsServerResponse(true);\r\n      setOldPassword('');\r\n      setNewLogin('');\r\n      setNewPassword('');\r\n      setNewPasswordOnceMore('');\r\n    }\r\n  }, [changeAccDataInfo]);\r\n\r\n  useEffect(() => {\r\n    if (errorChangeAccData) {\r\n      setIsServerResponse(true);\r\n    }\r\n  }, [errorChangeAccData]);\r\n\r\n  return (\r\n    <>\r\n      <AdminPanelContent>\r\n        <HeaderAdminPanel>You are on Admin page!</HeaderAdminPanel>\r\n        <Button onClick={handleChangePassword}>Change login data</Button>\r\n        {isChangeLoginData && (\r\n          <>\r\n            <ChangeDataContainer>\r\n              <Text>Old Password </Text>\r\n              <Input onChange={setStateOldPassword} value={oldPassword} type=\"password\" />\r\n            </ChangeDataContainer>\r\n            <ChangeDataContainer>\r\n              <Text>New Login </Text>\r\n              <Input onChange={setStateNewLogin} value={newLogin} />\r\n            </ChangeDataContainer>\r\n            <ChangeDataContainer>\r\n              <Text>New Password </Text>\r\n              <Input onChange={setStateNewPassword} value={newPassword} type=\"password\" />\r\n            </ChangeDataContainer>\r\n            <ChangeDataContainer>\r\n              <Text>Once New Password </Text>\r\n              <Input onChange={setStateNewPasswordOnceMore} value={newPasswordOnceMore} type=\"password\" />\r\n            </ChangeDataContainer>\r\n            <ButtonSave isCheckedAllData={isCheckedAllData} onClick={requestChangePassword}>\r\n              Save Changes\r\n            </ButtonSave>\r\n          </>\r\n        )}\r\n        {isServerResponse && (\r\n          <ChangedAccountAdminInfo isChangedSaves={errorChangeAccData.length === 0}>\r\n            {changeAccDataInfo ? changeAccDataInfo : errorChangeAccData}\r\n          </ChangedAccountAdminInfo>\r\n        )}\r\n      </AdminPanelContent>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nconst ProductContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 200px;\r\n  display: flex;\r\n  background: linear-gradient(90deg, #ffffff 20%, rgba(215, 215, 215, 1) 100%);\r\n  box-shadow: 0px 0px 15px 15px #d7d7d7 inset;\r\n  margin: 10px 0;\r\n  border-radius: 30px 0 0 30px;\r\n  position: relative;\r\n`;\r\n\r\nconst ImgContainer = styled.div`\r\n  width: 200px;\r\n  min-height: 310px;\r\n  margin: 10px 0 10px 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst ImgProduct = styled.img`\r\n  object-fit: contain;\r\n  width: 100%;\r\n  max-height: 200px;\r\n`;\r\n\r\nconst ProductInformation = styled.div`\r\n  width: 600px;\r\n  margin: 30px;\r\n`;\r\n\r\nconst Category = styled.p`\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  padding: 20px 0;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst Price = styled.p`\r\n  padding: 10px 0;\r\n  font-size: 20px;\r\n`;\r\n\r\ninterface IProductsList {\r\n  title: string;\r\n  category: string;\r\n  image: string;\r\n  description: string;\r\n  price: number;\r\n}\r\n\r\nexport const ProductsList: React.FC<IProductsList> = ({ title, category, image, description, price }) => {\r\n  return (\r\n    <>\r\n      <ProductContainer>\r\n        <ImgContainer>\r\n          <ImgProduct src={image} />\r\n        </ImgContainer>\r\n        <ProductInformation>\r\n          <Category>Category: {category}</Category>\r\n          <Title>Title: {title}</Title>\r\n          <p>Description</p>\r\n          <Description>{description}</Description>\r\n          <Price>Price: {price} </Price>\r\n        </ProductInformation>\r\n      </ProductContainer>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_ADMIN_DATA, IStore } from '../../../redux/constants';\r\nimport { IProducts } from '../../../utils/interfaces';\r\nimport { ProductsList } from './ProductsList';\r\n\r\nconst ProductsContainer = styled.section`\r\n  min-height: calc(100vh - 150px);\r\n  margin: 50px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderProducts = styled.h1`\r\n  font-size: 25px;\r\n  padding: 30px 0;\r\n`;\r\n\r\nconst NameSearch = styled.p`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Search = styled.input`\r\n  width: 150px;\r\n  height: 30px;\r\n  padding-left: 15px;\r\n`;\r\n\r\nconst ProductListContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nexport const Products = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const productsList = useSelector((store: IStore) => store.adminReducer.productsList);\r\n  const [products, setProducts] = useState<IProducts[]>([]);\r\n  const [inputFindProduct, setInputFindProduct] = useState('');\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ACTIONS_ADMIN_DATA.GET_PRODUCTS_ADMIN });\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setProducts(productsList);\r\n  }, [productsList]);\r\n\r\n  useEffect(() => {\r\n    if (!inputFindProduct) {\r\n      setProducts([...productsList]);\r\n    } else {\r\n      const newProducts = productsList.filter((elem) => elem.title.includes(inputFindProduct));\r\n      setProducts(newProducts);\r\n    }\r\n  }, [inputFindProduct]);\r\n\r\n  const findProduct = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setInputFindProduct(event.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProductsContainer>\r\n        <HeaderProducts>Products Page</HeaderProducts>\r\n        <NameSearch>Search by Title</NameSearch>\r\n        <Search onChange={findProduct} value={inputFindProduct} />\r\n        <ProductListContainer>\r\n          {products.map((product) => {\r\n            return (\r\n              <ProductsList\r\n                key={product.id}\r\n                title={product.title}\r\n                image={product.image}\r\n                price={product.price}\r\n                description={product.description}\r\n                category={product.category}\r\n              />\r\n            );\r\n          })}\r\n        </ProductListContainer>\r\n      </ProductsContainer>\r\n    </>\r\n  );\r\n};\r\n","export const mainColor = '#8d33da';\r\n\r\nexport const backgroundColor = '#d7d7d7'\r\n","import styled from 'styled-components';\r\n\r\nconst CustomSpinner = styled.div`\r\n  display: inline-block;\r\n  width: 80px;\r\n  height: 80px;\r\n  position: absolute;\r\n  transform: translate(0, 200%);\r\n  &::after {\r\n    content: ' ';\r\n    display: block;\r\n    width: 64px;\r\n    height: 64px;\r\n    margin: 8px;\r\n    border-radius: 50%;\r\n    border: 6px solid #fff;\r\n    border-color: #8d33da transparent #8d33da transparent;\r\n    animation: lds-dual-ring 1.2s linear infinite;\r\n  }\r\n  @keyframes lds-dual-ring {\r\n    0% {\r\n      transform: rotate(0deg);\r\n    }\r\n    100% {\r\n      transform: rotate(360deg);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const Spinner = (): JSX.Element => {\r\n  return <CustomSpinner />;\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_ADMIN_DATA, IStore } from '../../../redux/constants';\r\nimport { mainColor } from '../../../utils/colors';\r\nimport { IExistUserData } from '../../../utils/interfaces';\r\nimport { Spinner } from '../../Spinner';\r\n\r\nconst UsersContainer = styled.section`\r\n  min-height: calc(100vh - 150px);\r\n  margin: 50px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst HeaderUsers = styled.h1`\r\n  font-size: 25px;\r\n  padding: 30px 0;\r\n`;\r\n\r\nconst TableContainer = styled.div`\r\n  max-width: 100%;\r\n  width: 850px;\r\n  margin: 0 auto 30px auto;\r\n  box-shadow: 0px 5px 10px 2px rgba(34, 60, 80, 0.2);\r\n`;\r\n\r\nconst Table = styled.table`\r\n  border-collapse: collapse;\r\n  width: 100%;\r\n`;\r\n\r\nconst Thead = styled.thead`\r\n  height: 50px;\r\n  background-color: ${mainColor};\r\n`;\r\n\r\nconst Th = styled.th`\r\n  padding: 0 10px;\r\n  border: 1px solid #a9a99d;\r\n  min-width: 40px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ThNumber = styled(Th)`\r\n  cursor: default;\r\n`;\r\n\r\nconst Tr = styled.tr`\r\n  &:nth-child(2n) {\r\n    background-color: #a9a99d;\r\n  }\r\n  cursor: default;\r\n`;\r\n\r\nconst TrData = styled(Tr)`\r\n  cursor: pointer;\r\n  &:hover {\r\n    background-color: ${mainColor};\r\n  }\r\n`;\r\n\r\nconst Td = styled.td`\r\n  text-align: center;\r\n  border: 1px solid #79792b;\r\n  padding: 4px 1em;\r\n  text-transform: capitalize;\r\n`;\r\n\r\nconst UsersSearch = styled.input`\r\n  padding-left: 15px;\r\n  font-size: 20px;\r\n  margin-bottom: 30px;\r\n`;\r\n\r\nconst sortData = (arr: any, value: string, sortDirection: boolean): any => {\r\n  return [...arr].sort((a, b) => {\r\n    if (sortDirection) {\r\n      return a[value] < b[value] ? -1 : 1;\r\n    }\r\n    return a[value] < b[value] ? 1 : -1;\r\n  });\r\n};\r\n\r\nexport const Users = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const usersList = useSelector((store: IStore) => store.adminReducer.usersList);\r\n  const [searchedUser, setSearchedUser] = useState('');\r\n\r\n  const [sortedUserList, setSortedUserList] = useState<IExistUserData[]>([]);\r\n  const [sortDirection, setSortDirection] = useState(false);\r\n\r\n  const sortBy = (value: string): void => {\r\n    const sortedList = sortData(sortedUserList, value, !sortDirection);\r\n    setSortedUserList(sortedList);\r\n    setSortDirection(!sortDirection);\r\n  };\r\n\r\n  const searchUser = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const searchInputValue = event.target.value;\r\n    setSearchedUser(searchInputValue);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!searchedUser) {\r\n      setSortedUserList([...usersList]);\r\n    } else {\r\n      const newUsersList = sortedUserList.filter((user) => {\r\n        if (\r\n          user.email.includes(searchedUser) ||\r\n          user.firstName.includes(searchedUser) ||\r\n          user.lastName.includes(searchedUser)\r\n        )\r\n          return true;\r\n        else {\r\n          return false;\r\n        }\r\n      });\r\n      setSortedUserList(newUsersList);\r\n    }\r\n  }, [searchedUser]);\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      dispatch({ type: ACTIONS_ADMIN_DATA.GET_USERS_ADMIN });\r\n    }, 1500);\r\n    return (): void => {\r\n      dispatch({ type: ACTIONS_ADMIN_DATA.GET_USERS_SUCCESS_ADMIN, usersList: [] });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    setSortedUserList(usersList);\r\n  }, [usersList]);\r\n\r\n  const goToUser = (userEmail: string): void => {\r\n    history.push(`/admin-panel/users/${userEmail}`);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <UsersContainer>\r\n        <HeaderUsers>Users Page</HeaderUsers>\r\n        <UsersSearch value={searchedUser} onChange={searchUser} />\r\n        {usersList.length === 0 ? (\r\n          <Spinner />\r\n        ) : (\r\n          <TableContainer>\r\n            <Table>\r\n              <Thead>\r\n                <Tr>\r\n                  <ThNumber>№</ThNumber>\r\n                  <Th onClick={(): void => sortBy('id')}>Id</Th>\r\n                  <Th onClick={(): void => sortBy('email')}>Email</Th>\r\n                  <Th onClick={(): void => sortBy('firstName')}>First Name</Th>\r\n                  <Th onClick={(): void => sortBy('lastName')}>Last Name</Th>\r\n                </Tr>\r\n              </Thead>\r\n              <tbody>\r\n                {sortedUserList.length !== 0 &&\r\n                  sortedUserList.map((user, index) => {\r\n                    return (\r\n                      <TrData key={user.id} onClick={() => goToUser(`${user.email}`)}>\r\n                        <Td>{index + 1}</Td>\r\n                        <Td>{user.id}</Td>\r\n                        <Td>{user.email}</Td>\r\n                        <Td>{user.firstName}</Td>\r\n                        <Td>{user.lastName}</Td>\r\n                      </TrData>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n            </Table>\r\n          </TableContainer>\r\n        )}\r\n      </UsersContainer>\r\n    </>\r\n  );\r\n};\r\n","export default function getID() {\r\n    return '_' + Math.random().toString(36).substr(2, 9);\r\n  }\r\n  ","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_ADMIN_DATA, IStore } from '../../redux/constants';\r\nimport { mainColor } from '../../utils/colors';\r\nimport { IExistUserData } from '../../utils/interfaces';\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #000000cc;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  height: 250px;\r\n  padding-bottom: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #b0b0b0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 15px 15px 0 0;\r\n`;\r\n\r\nconst Information = styled.p`\r\n  font-size: 25px;\r\n  width: 85%;\r\n  text-align: center;\r\n`;\r\n\r\nconst UserInformation = styled.span`\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 300px;\r\n  height: 70px;\r\n  background-color: ${mainColor};\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  border-radius: 0 0 15px 15px;\r\n`;\r\n\r\nconst ButtonAction = styled.button`\r\n  width: 120px;\r\n  height: 35px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  font-size: 20px;\r\n  position: absolute;\r\n  color: red;\r\n  bottom: 15px;\r\n`;\r\n\r\nconst InformationMessage = styled(ErrorMessage)`\r\n  color: #00ff0d;\r\n`;\r\n\r\nconst onClickContent = (e: React.MouseEvent<HTMLDivElement>): void => {\r\n  e.stopPropagation();\r\n};\r\n\r\ninterface IModalProps {\r\n  closeModalDeleteUser(): void;\r\n  userEmail: string;\r\n  idDeletedUser: number;\r\n  usersList: IExistUserData[];\r\n}\r\n\r\nexport const ModalDeleteUser: React.FC<IModalProps> = ({\r\n  closeModalDeleteUser,\r\n  userEmail,\r\n  idDeletedUser,\r\n  usersList,\r\n}) => {\r\n  const errorMessage = useSelector((store: IStore) => store.adminReducer.error);\r\n  const [isUserDelete, setIsUserDelete] = useState(false);\r\n  const information = useSelector((store: IStore) => store.adminReducer.information);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    return (): void => {\r\n      dispatch({ type: ACTIONS_ADMIN_DATA.DELETE_USER_SUCCESS, information: '', usersList: usersList });\r\n      dispatch({ type: ACTIONS_ADMIN_DATA.DELETE_USER_FAILURE, error: '' });\r\n      history.push('/admin-panel/users');\r\n    };\r\n  }, []);\r\n\r\n  const deleteUser = (): void => {\r\n    dispatch({ type: ACTIONS_ADMIN_DATA.DELETE_USER, idDeletedUser: `${idDeletedUser}` });\r\n    setIsUserDelete(true);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Background onClick={closeModalDeleteUser}>\r\n        <ContentContainer onClick={onClickContent}>\r\n          <Information>\r\n            Are you sure? You want to delete user <UserInformation>{userEmail}</UserInformation> ?\r\n          </Information>\r\n          {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n          {information && <InformationMessage>{information}</InformationMessage>}\r\n        </ContentContainer>\r\n\r\n        <ButtonContainer onClick={onClickContent}>\r\n          <ButtonAction onClick={closeModalDeleteUser}> Cancel</ButtonAction>\r\n          <ButtonAction onClick={deleteUser} disabled={isUserDelete}>\r\n            {' '}\r\n            Delete\r\n          </ButtonAction>\r\n        </ButtonContainer>\r\n      </Background>\r\n    </>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\n\r\nimport { mainColor } from '../../../utils/colors';\r\nimport { IUserOrder } from '../../../utils/interfaces';\r\n\r\nconst OrderItemContainer = styled.div`\r\n  width: 100%;\r\n  min-height: 150px;\r\n  border: 1px solid grey;\r\n  border-radius: 40px;\r\n  display: flex;\r\n  align-items: center;\r\n  margin: 50px 0 0;\r\n`;\r\n\r\nconst InfoContainer = styled.div`\r\n  width: 25%;\r\n  min-height: 150px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  font-size: 20px;\r\n  color: #000000;\r\n`;\r\n\r\nconst OrderContent = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  width: 75%;\r\n  min-height: 150px;\r\n`;\r\n\r\nconst OrderHeader = styled.h2`\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst ProductItemContainer = styled.div`\r\n  width: 100%;\r\n  margin: 15px 0;\r\n  text-align: left;\r\n  background-color: #c4c4c4;\r\n  border-radius: 0 20px 20px 0;\r\n`;\r\n\r\nconst Information = styled.p`\r\n  font-size: 20px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 20px;\r\n  font-weight: 400;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst Count = styled(Title)`\r\n  margin: 7px 10px;\r\n`;\r\n\r\nconst Price = styled(Title)``;\r\n\r\ninterface IOrderItem {\r\n  orderItem: IUserOrder;\r\n}\r\n\r\nexport const OrderItem: React.FC<IOrderItem> = ({ orderItem }): JSX.Element => {\r\n  return (\r\n    <OrderItemContainer>\r\n      <InfoContainer>\r\n        <Text>Order date: {orderItem.date}</Text>\r\n        <Text>Order total money: {orderItem.totalMoney}</Text>\r\n      </InfoContainer>\r\n      <OrderContent>\r\n        <OrderHeader>Order Products</OrderHeader>\r\n        {orderItem.order.map((product) => {\r\n          return (\r\n            <ProductItemContainer>\r\n              <Information>\r\n                Product:\r\n                <Title>{product.title}</Title>\r\n              </Information>\r\n              <Information>\r\n                Price:\r\n                <Price> ${product.price}</Price>\r\n              </Information>\r\n              <Information>\r\n                Count:\r\n                <Count> {product.count}</Count>\r\n              </Information>\r\n            </ProductItemContainer>\r\n          );\r\n        })}\r\n      </OrderContent>\r\n    </OrderItemContainer>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { IStore } from '../../../redux/constants';\r\nimport getID from '../../../utils/get-random-id';\r\nimport { IExistUserData } from '../../../utils/interfaces';\r\nimport { ModalDeleteUser } from '../../Modal/ModalDeleteUser';\r\nimport { OrderItem } from '../../UserOrders/OrderItem';\r\n\r\nconst UserContainer = styled.section`\r\n  min-height: calc(100vh - 150px);\r\n  margin: 50px auto;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst UserInfoWrapper = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst UserHeader = styled.h1`\r\n  padding: 30px 0;\r\n`;\r\n\r\nconst UserInfo = styled.p`\r\n  font-weight: 600;\r\n  font-size: 20px;\r\n  padding: 5px 0;\r\n`;\r\n\r\nconst Text = styled.span`\r\n  font-weight: 400;\r\n  font-size: 20px;\r\n  padding-left: 15px;\r\n`;\r\n\r\nconst UserOrdersInfo = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n`;\r\n\r\nconst Button = styled.button`\r\n  font-size: 20px;\r\n  margin: 20px 0 0;\r\n`;\r\n\r\nconst OrdersInfo = styled.h2`\r\n  margin-top: 50px;\r\n`;\r\n\r\ninterface IParams {\r\n  userEmail: string;\r\n}\r\n\r\nexport const CurrentUser = (): JSX.Element => {\r\n  const usersList = useSelector((store: IStore) => store.adminReducer.usersList);\r\n  const [currentUser, setCurrentUser] = useState<IExistUserData>();\r\n  const [isDeleteUserModalOpen, setIsDeleteUserModalOpen] = useState(false);\r\n  const params = useParams<IParams>();\r\n\r\n  useEffect(() => {\r\n    const findedUser = usersList.find((user) => user.email === params.userEmail);\r\n    setCurrentUser(findedUser);\r\n  }, []);\r\n\r\n  const deleteUser = (): void => {\r\n    setIsDeleteUserModalOpen(true);\r\n  };\r\n\r\n  const closeModalDeleteUser = (): void => {\r\n    setIsDeleteUserModalOpen(false);\r\n  };\r\n\r\n  return (\r\n    <UserContainer>\r\n      {isDeleteUserModalOpen && (\r\n        <ModalDeleteUser\r\n          closeModalDeleteUser={closeModalDeleteUser}\r\n          userEmail={params.userEmail}\r\n          idDeletedUser={currentUser!.id}\r\n          usersList={usersList}\r\n        />\r\n      )}\r\n      <UserHeader>User Information</UserHeader>\r\n      {currentUser && (\r\n        <>\r\n          <UserInfoWrapper>\r\n            <UserInfo>\r\n              Email: <Text>{currentUser.email}</Text>\r\n            </UserInfo>\r\n            <UserInfo>\r\n              First Name: <Text>{currentUser.firstName}</Text>\r\n            </UserInfo>\r\n            <UserInfo>\r\n              Last Name: <Text>{currentUser.lastName}</Text>\r\n            </UserInfo>\r\n            <UserInfo>\r\n              Password: <Text>{currentUser.password}</Text>\r\n            </UserInfo>\r\n            <UserInfo>\r\n              Order Count: <Text>{currentUser.orders.length}</Text>\r\n            </UserInfo>\r\n            <Button onClick={deleteUser}>Delete User</Button>\r\n          </UserInfoWrapper>\r\n          <UserOrdersInfo>\r\n            <OrdersInfo>Orders Info</OrdersInfo>\r\n            {currentUser.orders.map((item) => {\r\n              return <OrderItem orderItem={item} key={getID()} />;\r\n            })}\r\n          </UserOrdersInfo>\r\n        </>\r\n      )}\r\n    </UserContainer>\r\n  );\r\n};\r\n","import { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { IStore, ACTIONS_APP } from '../../../redux/constants';\r\nimport { backgroundColor, mainColor } from '../../../utils/colors';\r\n\r\nconst StickyContainer = styled.div`\r\n  top: 70px;\r\n  z-index: 5;\r\n`;\r\n\r\nconst TotalInformationContainer = styled.div`\r\n  height: 150px;\r\n  border: 1px solid black;\r\n  margin: 0 auto;\r\n  width: 80%;\r\n  display: flex;\r\n  border-radius: 20px;\r\n  background-color: ${backgroundColor};\r\n  box-shadow: 0px 0px 15px 15px #ffffff;\r\n`;\r\n\r\nconst DiscountContainer = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  justify-content: space-around;\r\n`;\r\n\r\nconst DiscountText = styled.p`\r\n  font-size: 20px;\r\n  color: #000000;\r\n`;\r\n\r\nconst DiscrountInput = styled.input`\r\n  width: 200px;\r\n  height: 30px;\r\n  padding-left: 15px;\r\n`;\r\n\r\nconst DiscountButton = styled.button`\r\n  width: 132px;\r\n  padding: 3px 0;\r\n  font-size: 17px;\r\n`;\r\n\r\nconst PriceAndOrderContainer = styled.div`\r\n  width: 50%;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: flex-end;\r\n  justify-content: space-around;\r\n  padding-right: 30px;\r\n`;\r\n\r\nconst PriceContainer = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n\r\nconst PriceInfo = styled.p`\r\n  font-size: 20px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nconst Price = styled.p`\r\n  font-size: 20px;\r\n  width: 100px;\r\n  color: #000000;\r\n  padding: 0px 0 0 40px;\r\n`;\r\n\r\nconst Discount = styled.p`\r\n  font-size: 17px;\r\n  width: 100px;\r\n  color: #000000;\r\n  padding: 0px 0 0 40px;\r\n`;\r\n\r\nconst GetOrderButton = styled.button`\r\n  font-size: 20px;\r\n  color: #000000;\r\n  padding: 5px 10px;\r\n  margin-left: 100px;\r\n`;\r\n\r\nconst BasketHeader = styled.h1`\r\n  font-size: 30px;\r\n  color: ${mainColor};\r\n  position: absolute;\r\n  top: -35px;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const BasketInformation = (): JSX.Element => {\r\n  const [countOfMoney, setCountOfMoney] = useState('0');\r\n  const [discountInput, setDiscountInput] = useState('');\r\n  const [counfOfMoneyWithoutDiscount, setCounfOfMoneyWithoutDiscount] = useState('0');\r\n  const dispatch = useDispatch();\r\n  const listDicsountCode = useSelector((store: IStore) => store.appReducer.listDicsountCode);\r\n  const productsInBasket = useSelector((store: IStore) => store.appReducer.productsInBasket);\r\n  const currentAppliedDiscount = useSelector((store: IStore) => store.appReducer.currentDiscount);\r\n  // const orderTotalMoney = useSelector((store: IStore) => store.appReducer.orderTotalMoney);\r\n\r\n  useEffect(() => {\r\n    const totalPrice = productsInBasket\r\n      .reduce((acc, elem) => {\r\n        let price = elem.price;\r\n        price = price * elem.count;\r\n        acc += price;\r\n        return acc;\r\n      }, 0)\r\n      .toFixed(2);\r\n    setCounfOfMoneyWithoutDiscount(totalPrice);\r\n  }, [productsInBasket]);\r\n\r\n  useEffect(() => {\r\n    if (currentAppliedDiscount) {\r\n      const orderTotalMoney = (+counfOfMoneyWithoutDiscount * (1 - currentAppliedDiscount)).toFixed(2);\r\n      setCountOfMoney(orderTotalMoney);\r\n      dispatch({\r\n        type: ACTIONS_APP.ORDER_TOTAL_MONEY,\r\n        orderTotalMoney,\r\n      });\r\n    } else {\r\n      const orderTotalMoney = counfOfMoneyWithoutDiscount;\r\n      dispatch({\r\n        type: ACTIONS_APP.ORDER_TOTAL_MONEY,\r\n        orderTotalMoney,\r\n      });\r\n      setCountOfMoney(counfOfMoneyWithoutDiscount);\r\n    }\r\n  }, [counfOfMoneyWithoutDiscount]);\r\n\r\n  const inputDiscountCode = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setDiscountInput(event.target.value);\r\n  };\r\n\r\n  const checkDiscountCode = (): void => {\r\n    const currentDiscount = listDicsountCode.get(discountInput);\r\n    if (currentDiscount) {\r\n      if (currentDiscount < currentAppliedDiscount) {\r\n        alert('Your discount is bigger that new discount');\r\n        setDiscountInput('');\r\n        return;\r\n      }\r\n      alert(`Your new discount - ${currentDiscount * 100}%`);\r\n      const newCountOfMoney = (+counfOfMoneyWithoutDiscount * (1 - currentDiscount)).toFixed(2);\r\n      setCountOfMoney(newCountOfMoney);\r\n      setDiscountInput('');\r\n      dispatch({\r\n        type: ACTIONS_APP.SET_DISCOUNT,\r\n        currentDiscount,\r\n      });\r\n    }\r\n  };\r\n\r\n  const openModalOrder = (): void => {\r\n    dispatch({\r\n      type: ACTIONS_APP.IS_OPEN_MODAL_ORDER,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <StickyContainer>\r\n      <BasketHeader>\r\n        {productsInBasket.length !== 0 ? 'Your Shopping Cart' : 'Your Shopping Cart is Empty yet ;)'}\r\n      </BasketHeader>\r\n      {productsInBasket.length !== 0 && (\r\n        <TotalInformationContainer>\r\n          <DiscountContainer>\r\n            <DiscountText>Enter code for discount</DiscountText>\r\n            <DiscrountInput onChange={inputDiscountCode} value={discountInput} />\r\n            <DiscountButton onClick={checkDiscountCode}> Get Discount</DiscountButton>\r\n          </DiscountContainer>\r\n          <PriceAndOrderContainer>\r\n            <PriceContainer>\r\n              <PriceInfo>Price: </PriceInfo>\r\n              <Price>${counfOfMoneyWithoutDiscount}</Price>\r\n            </PriceContainer>\r\n            <PriceContainer>\r\n              <PriceInfo>Your discount: </PriceInfo>\r\n              <Discount>{currentAppliedDiscount * 100}%</Discount>\r\n            </PriceContainer>\r\n            <PriceContainer>\r\n              <PriceInfo>Total: </PriceInfo>\r\n              <Price>${currentAppliedDiscount ? countOfMoney : counfOfMoneyWithoutDiscount}</Price>\r\n            </PriceContainer>\r\n            <GetOrderButton onClick={openModalOrder}>Click For Order</GetOrderButton>\r\n          </PriceAndOrderContainer>\r\n        </TotalInformationContainer>\r\n      )}\r\n    </StickyContainer>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_APP } from '../../../redux/constants';\r\nimport { IProductsBasket } from '../../../utils/interfaces';\r\n\r\ninterface IPriceAndCountInfo {\r\n  product: IProductsBasket;\r\n}\r\n\r\nconst PriceAndCountContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 50px;\r\n  align-items: center;\r\n  margin-top: 80px;\r\n`;\r\n\r\nconst PriceInfo = styled.p`\r\n  text-align: center;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: flex-end;\r\n`;\r\n\r\nconst PriceText = styled.p`\r\n  font-size: 20px;\r\n`;\r\n\r\nconst Price = styled.p`\r\n  font-size: 25px;\r\n  color: #8d33da;\r\n  padding: 5px;\r\n`;\r\n\r\nconst CountInfoContainer = styled.div`\r\n  display: flex;\r\n  text-align: center;\r\n  align-items: center;\r\n  margin-top: 30px;\r\n`;\r\n\r\nconst MinusCount = styled.button`\r\n  padding: 5px 10px;\r\n  z-index: 10;\r\n`;\r\n\r\nconst Count = styled.span`\r\n  display: block;\r\n  width: 20px;\r\n  padding: 10px;\r\n  font-size: 22px;\r\n`;\r\n\r\nconst PlusCount = styled.button`\r\n  padding: 5px 10px;\r\n  z-index: 10;\r\n`;\r\n\r\nexport const PriceAndCountInfo: React.FC<IPriceAndCountInfo> = ({ product }): JSX.Element => {\r\n  const [countProduct, setCountProduct] = useState(1);\r\n  const [totalPriceForProduct, setTotalPriceForProduct] = useState(product.price);\r\n  const dispatch = useDispatch();\r\n\r\n  const minusProduct = (): void => {\r\n    if (countProduct > 1) {\r\n      const newCount = countProduct - 1;\r\n      const totalPrice = (newCount * product.price).toFixed(2);\r\n      setTotalPriceForProduct(+totalPrice);\r\n      setCountProduct(newCount);\r\n      const idChangedProduct = product.id;\r\n      dispatch({\r\n        type: ACTIONS_APP.MINUS_COUNT_PRODUCT,\r\n        idChangedProduct,\r\n      });\r\n    }\r\n  };\r\n\r\n  const plusProduct = (): void => {\r\n    const newCount = countProduct + 1;\r\n    const totalPrice = (newCount * product.price).toFixed(2);\r\n    setTotalPriceForProduct(+totalPrice);\r\n    setCountProduct(newCount);\r\n    const idChangedProduct = product.id;\r\n    dispatch({\r\n      type: ACTIONS_APP.PLUS_COUNT_PRODUCT,\r\n      idChangedProduct,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <PriceAndCountContainer>\r\n      <PriceInfo>Total Price</PriceInfo>\r\n      <Price>${totalPriceForProduct}</Price>\r\n      <CountInfoContainer>\r\n        <MinusCount onClick={minusProduct}>-</MinusCount>\r\n        <Count>{countProduct}</Count>\r\n        <PlusCount onClick={plusProduct}>+</PlusCount>\r\n      </CountInfoContainer>\r\n      <PriceInfo>Price for 1 product</PriceInfo>\r\n      <PriceText> ${product.price}</PriceText>\r\n    </PriceAndCountContainer>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { CSSProperties } from 'react';\r\n\r\nimport { IProductsBasket } from '../../../utils/interfaces';\r\nimport { PriceAndCountInfo } from './PriceAndCountInfo';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ACTIONS_APP } from '../../../redux/constants';\r\n\r\nconst ProductContainer = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  background: linear-gradient(90deg, #ffffff 20%, rgba(215, 215, 215, 1) 100%);\r\n  box-shadow: 0px 0px 15px 15px #d7d7d7 inset;\r\n  margin: 10px 0;\r\n  border-radius: 30px 0 0 30px;\r\n  position: relative;\r\n`;\r\n\r\nconst ImgContainer = styled.div`\r\n  width: 200px;\r\n  min-height: 310px;\r\n  margin: 10px 0 10px 50px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 10px;\r\n`;\r\n\r\nconst ImgProduct = styled.img`\r\n  object-fit: contain;\r\n  width: 100%;\r\n  max-height: 200px;\r\n`;\r\n\r\nconst ProductInformation = styled.div`\r\n  width: 600px;\r\n  margin: 50px;\r\n`;\r\n\r\nconst Category = styled.p`\r\n  padding-top: 20px;\r\n`;\r\n\r\nconst Title = styled.p`\r\n  padding: 20px 0;\r\n`;\r\nconst Description = styled.p`\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst BasketStyle = {\r\n  position: 'absolute',\r\n  fontSize: '25px',\r\n  color: '#8d33da',\r\n  top: '10%',\r\n  right: '0',\r\n  cursor: 'pointer',\r\n  zIndex: 10,\r\n} as CSSProperties;\r\n\r\ninterface IProductInBasket {\r\n  product: IProductsBasket;\r\n}\r\n\r\nexport const ProductInBasket: React.FC<IProductInBasket> = ({ product }): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n\r\n  const deleteProductFromBasket = (): void => {\r\n    const deleteSelectedProduct = product.id;\r\n    dispatch({\r\n      type: ACTIONS_APP.DELETE_PRODUCT,\r\n      deleteSelectedProduct,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ProductContainer>\r\n        <FontAwesomeIcon icon={faTimes} style={BasketStyle} onClick={deleteProductFromBasket} />\r\n        <ImgContainer>\r\n          <ImgProduct src={product.image} />\r\n        </ImgContainer>\r\n        <ProductInformation>\r\n          <Category>Category: {product.category}</Category>\r\n          <Title>Title: {product.title}</Title>\r\n          <p>Description</p>\r\n          <Description>{product.description}</Description>\r\n        </ProductInformation>\r\n        <PriceAndCountInfo product={product}></PriceAndCountInfo>\r\n      </ProductContainer>\r\n    </>\r\n  );\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { IStore } from '../../redux/constants';\r\nimport { backgroundColor } from '../../utils/colors';\r\nimport { BasketInformation } from './BasketInformation';\r\nimport { ProductInBasket } from './ProductBasket';\r\n\r\nconst BasketContainer = styled.section`\r\n  width: 80%;\r\n  min-height: calc(100vh - 300px);\r\n  background-color: ${backgroundColor};\r\n  margin: 150px auto 100px auto;\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst ProductContainer = styled.div`\r\n  margin: 15px 0;\r\n`;\r\n\r\nexport const Basket = (): JSX.Element => {\r\n  const productsInBasket = useSelector((store: IStore) => store.appReducer.productsInBasket);\r\n\r\n  return (\r\n    <>\r\n      <BasketContainer>\r\n        <ProductContainer>\r\n          {productsInBasket.length !== 0\r\n            ? productsInBasket.map((elem) => {\r\n                return <ProductInBasket key={elem.id} product={elem} />;\r\n              })\r\n            : null}\r\n        </ProductContainer>\r\n        <BasketInformation />\r\n      </BasketContainer>\r\n    </>\r\n  );\r\n};\r\n","export const getDate = (): string => {\r\n  const date = new Date();\r\n  const year = date.getFullYear();\r\n  const month = checkLength(date.getMonth() + 1);\r\n  const day = checkLength(date.getDate());\r\n  const hours = checkLength(date.getHours());\r\n  const min = checkLength(date.getMinutes());\r\n  return `${hours}:${min}, ${day}.${month}.${year}`;\r\n};\r\n\r\nconst checkLength = (date: number): string => {\r\n  let value = `${date}`;\r\n  if (value.length === 1) {\r\n    value = `0${value}`;\r\n  }\r\n\r\n  return value;\r\n};\r\n","const regEmail =\r\n  /^(([^<>()\\\\[\\]\\\\.,;:\\s@\"]+(\\.[^<>()\\\\[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n\r\nexport const checkEmail = (value: string): boolean => {\r\n  return regEmail.test(value);\r\n};\r\n","const bannedSymbols = [\r\n  '~',\r\n  '!',\r\n  '@',\r\n  '#',\r\n  '$',\r\n  '%',\r\n  '^',\r\n  '*',\r\n  '(',\r\n  ')',\r\n  '_',\r\n  '-',\r\n  '+',\r\n  '=',\r\n  '|',\r\n  ':',\r\n  ';',\r\n  '\"',\r\n  \"'\",\r\n  '`',\r\n  '<',\r\n  '>',\r\n  ',',\r\n  '.',\r\n  '?',\r\n  '/',\r\n  '0',\r\n  '1',\r\n  '2',\r\n  '3',\r\n  '4',\r\n  '5',\r\n  '6',\r\n  '7',\r\n  '8',\r\n  '9',\r\n];\r\n\r\nexport const checkNameLetters = (value: string): boolean => {\r\n  let result = true;\r\n  for (let i = 0; i < bannedSymbols.length; i += 1) {\r\n    if (value.includes(bannedSymbols[i])) {\r\n      result = false;\r\n      break;\r\n    }\r\n  }\r\n\r\n  return result;\r\n};\r\n\r\nexport const checkNameLength = (value: string): boolean => {\r\n  return value.length > 5 ? true : false;\r\n};\r\n","const regMobile = /((25|29|33|34) ([0-9]{3}( [0-9]{2}){2}))/;\r\nconst regNumbersAndSpace = /^[0-9 ]+$/;\r\n\r\nexport const checkPhone = (value: string): boolean => {\r\n  return regMobile.test(value);\r\n};\r\n\r\nexport const checkPhoneSymbols = (value: string): boolean => {\r\n  return regNumbersAndSpace.test(value);\r\n};\r\n","import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_APP, IStore } from '../../redux/constants';\r\nimport { getDate } from '../../utils/get-date';\r\nimport { IFilteredProduct, IUserInfo, IUserOrder } from '../../utils/interfaces';\r\nimport { checkEmail } from '../../utils/validate-email-order';\r\nimport { checkNameLength, checkNameLetters } from '../../utils/validate-name-order';\r\nimport { checkPhone, checkPhoneSymbols } from '../../utils/validate-phone-order';\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #000000cc;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 150;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  background: #6d6d6d;\r\n  border-radius: 12px;\r\n  width: fit-content;\r\n  height: fit-content;\r\n  padding: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst CloseButton = styled.button`\r\n  width: 30px;\r\n  height: 30px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  position: relative;\r\n  left: 100%;\r\n  bottom: 30px;\r\n`;\r\n\r\nconst OrderInfo = styled.p`\r\n  font-size: 30px;\r\n  text-align: center;\r\n`;\r\n\r\nconst NameContainer = styled.div`\r\n  width: 300px;\r\n`;\r\n\r\nconst NameInfo = styled.p`\r\n  font-size: 18px;\r\n  color: #ffffff;\r\n  padding: 15px 0;\r\n`;\r\n\r\ninterface INameInput {\r\n  isValidName: boolean;\r\n}\r\n\r\nconst NameInput = styled.input<INameInput>`\r\n  width: 260px;\r\n  padding-left: 20px;\r\n  height: 30px;\r\n  font-size: 17px;\r\n  box-shadow: 0px 0px 10px 5px #fd7070;\r\n  ${(props): string => (props.isValidName ? `  box-shadow: 0px 0px 10px 5px #5ff53a;` : '')};\r\n`;\r\n\r\ninterface IEmailInput {\r\n  isValidEmail: boolean;\r\n}\r\n\r\nconst EmailInput = styled.input<IEmailInput>`\r\n  width: 260px;\r\n  padding-left: 20px;\r\n  height: 30px;\r\n  font-size: 17px;\r\n  box-shadow: 0px 0px 10px 5px #fd7070;\r\n  ${(props): string => (props.isValidEmail ? `  box-shadow: 0px 0px 10px 5px #5ff53a;` : '')};\r\n`;\r\n\r\ninterface IPhoneInput {\r\n  isValidPhone: boolean;\r\n}\r\n\r\nconst PhoneInput = styled.input<IPhoneInput>`\r\n  width: 260px;\r\n  padding-left: 20px;\r\n  height: 30px;\r\n  font-size: 17px;\r\n  box-shadow: 0px 0px 10px 5px #fd7070;\r\n  ${(props): string => (props.isValidPhone ? `  box-shadow: 0px 0px 10px 5px #5ff53a;` : '')};\r\n`;\r\n\r\ninterface IButtonSubmit {\r\n  isAllInputsValid: boolean;\r\n}\r\n\r\nconst ButtonSubmit = styled.button<IButtonSubmit>`\r\n  margin-top: 40px;\r\n  width: 284px;\r\n  padding: 10px;\r\n  font-size: 18px;\r\n  ${({ isAllInputsValid }): string => (!isAllInputsValid ? `{opacity: 0.5; pointer-events: none}` : '')}\r\n`;\r\n\r\nexport const ModalOrder: React.FC = () => {\r\n  const productsInBasket = useSelector((store: IStore) => store.appReducer.productsInBasket);\r\n  const orderTotalMoney = useSelector((store: IStore) => store.appReducer.orderTotalMoney);\r\n  const textOrderStatus = useSelector((store: IStore) => store.appReducer.orderStatus);\r\n  const textOrderError = useSelector((store: IStore) => store.appReducer.orderError);\r\n  const useFullName = useSelector((store: IStore) => store.loginReducer.userFullName);\r\n  const emailOfUser = useSelector((store: IStore) => store.loginReducer.userEmail);\r\n  const isUserLogin = useSelector((store: IStore) => store.loginReducer.isUserLogin);\r\n  const [userName, setUserName] = useState(useFullName);\r\n  const [userEmail, setUserEmail] = useState(emailOfUser);\r\n  const [userPhone, setUserPhone] = useState('');\r\n  const [isValidName, setIsValidName] = useState(false);\r\n  const [isValidEmail, setIsValidEmail] = useState(false);\r\n  const [isValidPhone, setIsValidPhone] = useState(false);\r\n  const [isAllInputsValid, setIsAllInputsValid] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const closeModal = (): void => {\r\n    dispatch({\r\n      type: ACTIONS_APP.IS_OPEN_MODAL_ORDER,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (textOrderStatus) {\r\n      alert(`Thanks. We'll see your order in Telegramm and write.`);\r\n      dispatch({\r\n        type: ACTIONS_APP.IS_OPEN_MODAL_ORDER,\r\n      });\r\n      dispatch({\r\n        type: ACTIONS_APP.CLEAR_BASKET,\r\n      });\r\n    } else if (textOrderError) {\r\n      alert(`Something going wrong...`);\r\n    }\r\n\r\n    return () => {\r\n      const orderStatus = '';\r\n      const orderError = '';\r\n      dispatch({ type: ACTIONS_APP.SEND_INFO_TG_SUCCESS, orderStatus });\r\n      dispatch({ type: ACTIONS_APP.SEND_INFO_TG_FAILURE, orderError });\r\n    };\r\n  }, [textOrderStatus, textOrderError]);\r\n\r\n  useEffect(() => {\r\n    checkNameLength(userName) ? setIsValidName(true) : setIsValidName(false);\r\n    checkEmail(userEmail) ? setIsValidEmail(true) : setIsValidEmail(false);\r\n    isValidName && isValidPhone && isValidEmail && setIsAllInputsValid(true);\r\n  }, [isValidName, isValidPhone, isValidEmail]);\r\n\r\n  const changeUserName = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const value = event.target.value as string;\r\n    const isNameValid = checkNameLetters(value);\r\n    isNameValid ? setUserName(value) : setUserName(value.slice(0, value.length - 1));\r\n    checkNameLength(value) ? setIsValidName(true) : setIsValidName(false);\r\n  };\r\n  const changeUserEmail = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const value = event.target.value as string;\r\n    const isEmailValid = checkEmail(value);\r\n    setUserEmail(value);\r\n    isEmailValid ? setIsValidEmail(true) : setIsValidEmail(false);\r\n  };\r\n  const changeUserPhone = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    const value = event.target.value as string;\r\n    const isValidSymbolPhone = checkPhoneSymbols(value);\r\n\r\n    if (!isValidSymbolPhone) {\r\n      setUserPhone(value.slice(0, value.length - 1));\r\n      return;\r\n    }\r\n\r\n    if (value.length <= 12) {\r\n      setUserPhone(value);\r\n      const isPhoneValid = checkPhone(value);\r\n      isPhoneValid ? setIsValidPhone(true) : setIsValidPhone(false);\r\n      return;\r\n    }\r\n    setUserPhone(value.slice(0, value.length - 1));\r\n  };\r\n\r\n  const sendOrderRequest = (): void => {\r\n    if (isValidName && isValidPhone && isValidEmail) {\r\n      const filteredProduct = productsInBasket.map((elem) => {\r\n        let filteredElem = {} as IFilteredProduct;\r\n        filteredElem.id = elem.id;\r\n        filteredElem.title = elem.title;\r\n        filteredElem.count = elem.count;\r\n        filteredElem.price = elem.price;\r\n        return filteredElem;\r\n      });\r\n      const date = getDate();\r\n\r\n      if (isUserLogin) {\r\n        const userOrders: IUserOrder = {\r\n          email: userEmail,\r\n          phone: userPhone,\r\n          order: filteredProduct,\r\n          totalMoney: `$${orderTotalMoney}`,\r\n          date: date,\r\n        };\r\n        dispatch({\r\n          type: ACTIONS_APP.CREATE_ORDER_ON_SERVER,\r\n          userOrders,\r\n        });\r\n      }\r\n\r\n      const userInfo: IUserInfo = {\r\n        name: userName,\r\n        email: userEmail,\r\n        phone: userPhone,\r\n        order: filteredProduct,\r\n        totalMoney: `$${orderTotalMoney}`,\r\n        date: date,\r\n      };\r\n\r\n      dispatch({\r\n        type: ACTIONS_APP.SEND_INFO_TG_REQUEST,\r\n        userInfo,\r\n      });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Background onClick={closeModal}>\r\n      <Container onClick={(event) => event.stopPropagation()}>\r\n        <OrderInfo>Order Info</OrderInfo>\r\n        <CloseButton onClick={closeModal}>&#10006;</CloseButton>\r\n        <NameContainer>\r\n          <NameInfo>1) Write Your Full Name </NameInfo>\r\n          <NameInput onChange={changeUserName} value={userName} isValidName={isValidName}></NameInput>\r\n        </NameContainer>\r\n        <NameContainer>\r\n          <NameInfo>2) Write Your Email </NameInfo>\r\n          <EmailInput onChange={changeUserEmail} value={userEmail} isValidEmail={isValidEmail}></EmailInput>\r\n        </NameContainer>\r\n        <NameContainer>\r\n          <NameInfo>3) Write Your Phone</NameInfo>\r\n          <PhoneInput\r\n            onChange={changeUserPhone}\r\n            value={userPhone}\r\n            isValidPhone={isValidPhone}\r\n            placeholder=\"29 123 456 78\"\r\n          ></PhoneInput>\r\n        </NameContainer>\r\n        <ButtonSubmit onClick={sendOrderRequest} isAllInputsValid={isAllInputsValid}>\r\n          Confirm and Send Info\r\n        </ButtonSubmit>\r\n      </Container>\r\n    </Background>\r\n  );\r\n};\r\n","import styled from \"styled-components\";\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #000000cc;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 150;\r\n`;\r\n\r\nconst Container = styled.div`\r\n  background: #ffffff;\r\n  border-radius: 12px;\r\n  max-width: 35%;\r\n  height: fit-content;\r\n  padding: 40px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n  text-align: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  width: 50%;\r\n`;\r\n\r\nconst TitleProduct = styled.p`\r\n  font-size: 25px;\r\n  width: 100%;\r\n  padding: 0 0 30px;\r\n`;\r\n\r\nconst Description = styled.p`\r\n  width: 100%;\r\n  padding: 20px 0 0;\r\n`;\r\n\r\ninterface IModalProductView {\r\n  closeModalView(): void;\r\n  imgSrc: string;\r\n  title: string;\r\n  description: string;\r\n}\r\n\r\nexport const ModalProductView: React.FC<IModalProductView> = ({\r\n  closeModalView,\r\n  imgSrc,\r\n  title,\r\n  description,\r\n}) => {\r\n  const closeModal = (): void => {\r\n    closeModalView();\r\n  };\r\n\r\n  return (\r\n    <Background onClick={closeModal}>\r\n      <Container onClick={(event) => event.stopPropagation()}>\r\n        <TitleProduct>{title}</TitleProduct>\r\n        <Img src={imgSrc} />\r\n        <Description>{description}</Description>\r\n      </Container>\r\n    </Background>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport { useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCartPlus, faMinusSquare } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport './style.scss';\r\nimport { ACTIONS_APP, IStore } from '../../../redux/constants';\r\nimport { useEffect } from 'react';\r\nimport { IProducts } from '../../../utils/interfaces';\r\nimport { ModalProductView } from '../../Modal';\r\n\r\nconst CardContainer = styled.div`\r\n  width: fit-content;\r\n  height: fit-content;\r\n  margin: 20px 10px 0px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  text-align: center;\r\n`;\r\n\r\nconst CategoryContainer = styled.div`\r\n  margin-bottom: 20px;\r\n`;\r\n\r\nconst Category = styled.span`\r\n  color: #757575;\r\n  cursor: pointer;\r\n  transition: all 0.5s ease;\r\n  border-radius: 10px;\r\n  padding: 7px;\r\n  &:hover {\r\n    color: #ffffff;\r\n    background-color: #8d33da;\r\n  }\r\n`;\r\n\r\nconst Title = styled.p`\r\n  color: #757575;\r\n  width: 221px;\r\n  height: 75px;\r\n  align-items: center;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ImgContainer = styled.div`\r\n  width: 200px;\r\n  min-height: 310px;\r\n  margin: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  object-fit: contain;\r\n  width: 100%;\r\n  max-height: 270px;\r\n  cursor: pointer;\r\n`;\r\n\r\nconst ContainerBuying = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  position: relative;\r\n`;\r\n\r\nconst Price = styled.p`\r\n  color: #757575;\r\n  font-size: 20px;\r\n`;\r\n\r\ninterface IMainCard {\r\n  product: IProducts;\r\n}\r\n\r\nexport const Product: React.FC<IMainCard> = ({ product }): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const [isOpenModalProductView, setIsOpenModalProductView] = useState(false);\r\n  const [isIdInBasket, setIsIdInBasker] = useState(false);\r\n  const listProductInBasket = useSelector((store: IStore) => store.appReducer.productsInBasket);\r\n\r\n  useEffect(() => {\r\n    const isProductInBasket = listProductInBasket.some((elem) => elem.id === product.id);\r\n    setIsIdInBasker(isProductInBasket);\r\n  }, [listProductInBasket, product.id]);\r\n\r\n  const addProductToBasket = (): void => {\r\n    dispatch({\r\n      type: ACTIONS_APP.ADD_PRODUCT,\r\n      addSelectedProduct: product,\r\n    });\r\n    setIsIdInBasker(true);\r\n  };\r\n\r\n  const openModalProductView = (): void => {\r\n    setIsOpenModalProductView(true);\r\n  };\r\n\r\n  const removeProductFromBasker = (): void => {\r\n    dispatch({\r\n      type: ACTIONS_APP.DELETE_PRODUCT,\r\n      deleteSelectedProduct: product.id,\r\n    });\r\n    setIsIdInBasker(false);\r\n  };\r\n\r\n  const closeModalView = (): void => {\r\n    setIsOpenModalProductView(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {isOpenModalProductView && (\r\n        <ModalProductView\r\n          closeModalView={closeModalView}\r\n          imgSrc={product.image}\r\n          title={product.title}\r\n          description={product.description}\r\n        />\r\n      )}\r\n      <CardContainer>\r\n        <ImgContainer>\r\n          <Img src={product.image} onClick={openModalProductView} />\r\n        </ImgContainer>\r\n        <Title>{product.title}</Title>\r\n        <CategoryContainer>\r\n          Category: <Category>{product.category}</Category>\r\n        </CategoryContainer>\r\n        <ContainerBuying>\r\n          <Price>${product.price}</Price>\r\n          <FontAwesomeIcon\r\n            icon={faMinusSquare}\r\n            className={isIdInBasket ? 'faCartMinus' : 'faCartMinusInBasket'}\r\n            onClick={removeProductFromBasker}\r\n          />\r\n          <FontAwesomeIcon\r\n            icon={faCartPlus}\r\n            className={!isIdInBasket ? 'faShoppingTruck' : 'faShoppingTruckInBasket'}\r\n            onClick={addProductToBasket}\r\n          />\r\n        </ContainerBuying>\r\n      </CardContainer>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { IStore } from '../../redux/constants';\r\nimport { IProducts } from '../../utils/interfaces';\r\nimport { Product } from '../Main/MainContent/Product';\r\n\r\nconst ProductsCategoryContainer = styled.section`\r\n  position: relative;\r\n  width: 80%;\r\n  min-height: calc(100vh - 250px);\r\n  background-color: #ffffff;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  margin: 100px auto 100px auto;\r\n  border-radius: 50px;\r\n  box-shadow: 0px 0px 15px 15px #ffffff;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\ninterface IUseParams {\r\n  category: string;\r\n}\r\n\r\nexport const Category: React.FC = () => {\r\n  const { category } = useParams<IUseParams>();\r\n  const allProducts = useSelector((store: IStore) => store.productReducer.products);\r\n  const [productInCategory, setProductInCategory] = useState<IProducts[]>([]);\r\n\r\n  useEffect(() => {\r\n    const filteredProducts = allProducts.filter((elem) => elem.category === category);\r\n    setProductInCategory(filteredProducts);\r\n  }, [category, allProducts]);\r\n\r\n  return (\r\n    <>\r\n      <ProductsCategoryContainer>\r\n        {productInCategory.map((elem) => {\r\n          return <Product key={elem.id} product={elem} />;\r\n        })}\r\n      </ProductsCategoryContainer>\r\n    </>\r\n  );\r\n};\r\n","function randomInteger(min, max) {\r\n  let rand = min + Math.random() * (max + 1 - min);\r\n  return Math.floor(rand);\r\n}\r\n\r\nexport default function getRandomProducts() {\r\n    let arr = [];\r\n    arr.push(randomInteger(0, 3));\r\n    arr.push(randomInteger(4, 7));\r\n    arr.push(randomInteger(8, 13));\r\n    arr.push(randomInteger(14, 19));\r\n    return arr;\r\n}","const carouselList = [\r\n  './carousel/carousel-1.jpg',\r\n  './carousel/carousel-2.jpg',\r\n  './carousel/carousel-3.jpg',\r\n  './carousel/carousel-4.jpg',\r\n  './carousel/carousel-5.jpg',\r\n];\r\n\r\nexport default carouselList;\r\n","import { useRef, useEffect, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faChevronRight, faChevronLeft } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport carouselList from '../../../utils/carousel-list';\r\nimport getID from '../../../utils/get-random-id';\r\nimport { backgroundColor } from '../../../utils/colors';\r\n\r\nconst SLICE_PX_LETTER = 2;\r\n\r\nconst CarouselContainer = styled.section`\r\n  width: 800px;\r\n  margin: 50px auto;\r\n  position: static;\r\n  overflow: hidden;\r\n  height: 580px;\r\n`;\r\n\r\nconst ImgShop = styled.img`\r\n  width: 800px;\r\n  margin: 0 10px;\r\n`;\r\n\r\nconst CarouselWrapper = styled.div`\r\n  width: fit-content;\r\n  position: relative;\r\n  display: flex;\r\n  transition: all 1s ease-out;\r\n`;\r\n\r\nconst ArrowsContainer = styled.div`\r\n  width: 200px;\r\n  height: 50px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nconst styleArrow = {\r\n  color: '#646464',\r\n  fontSize: '30px',\r\n  cursor: 'pointer',\r\n};\r\n\r\nconst sliceLastPxFromValue = (value: string): string => {\r\n  return value.slice(0, value.length - SLICE_PX_LETTER);\r\n};\r\n\r\nconst moveCarouselContainerRight = (element: HTMLDivElement): void => {\r\n  let right = element.style.right;\r\n\r\n  if (+sliceLastPxFromValue(right) >= 3280) {\r\n    element.style.right = '10px';\r\n\r\n    return;\r\n  }\r\n\r\n  right = sliceLastPxFromValue(right);\r\n  right = `${+right + 820}px`;\r\n  element.style.right = right;\r\n};\r\n\r\nconst moveCarouselContainerLeft = (element: HTMLDivElement): void => {\r\n  let right = element.style.right;\r\n\r\n  if (+sliceLastPxFromValue(right) <= 10) {\r\n    element.style.right = '3290px';\r\n\r\n    return;\r\n  }\r\n\r\n  right = sliceLastPxFromValue(right);\r\n  right = `${+right - 820}px`;\r\n  element.style.right = right;\r\n};\r\n\r\nconst ShadowWrapper = styled.div`\r\n  z-index: 2;\r\n  width: 800px;\r\n  height: 534px;\r\n  position: absolute;\r\n  box-shadow: 0px 0px 15px 15px ${backgroundColor} inset;\r\n`;\r\n\r\nexport const Carousel = (): JSX.Element => {\r\n  const [leftCoordWrapper, setLeftCoordWrapper] = useState('');\r\n  const refCarouselWrapper = useRef<HTMLDivElement>(null);\r\n  const refCarouselContainer = useRef<HTMLDivElement>(null);\r\n\r\n  useEffect(() => {\r\n    const pos = (refCarouselContainer.current as HTMLDivElement).offsetLeft;\r\n    const left = `${pos}`;\r\n    setLeftCoordWrapper(left);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const intervalId = setInterval(() => {\r\n      const carousel = refCarouselWrapper.current as HTMLDivElement;\r\n      moveCarouselContainerRight(carousel);\r\n    }, 10000);\r\n    console.log(intervalId);\r\n\r\n    return (): void => {\r\n      clearInterval(intervalId);\r\n    };\r\n  }, []);\r\n\r\n  const moveCarouselRight = (): void => {\r\n    const carousel = refCarouselWrapper.current as HTMLDivElement;\r\n    moveCarouselContainerRight(carousel);\r\n  };\r\n\r\n  const moveCarouselLeft = (): void => {\r\n    const carousel = refCarouselWrapper.current as HTMLDivElement;\r\n    moveCarouselContainerLeft(carousel);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <CarouselContainer ref={refCarouselContainer}>\r\n        <ShadowWrapper style={{ left: `${leftCoordWrapper}` }} />\r\n        <CarouselWrapper ref={refCarouselWrapper} style={{ right: '10px' }}>\r\n          {carouselList.map((elem) => {\r\n            return <ImgShop key={getID()} src={elem} />;\r\n          })}\r\n        </CarouselWrapper>\r\n        <ArrowsContainer>\r\n          <FontAwesomeIcon onClick={moveCarouselLeft} icon={faChevronLeft} style={styleArrow} />\r\n          <FontAwesomeIcon onClick={moveCarouselRight} icon={faChevronRight} style={styleArrow} />\r\n        </ArrowsContainer>\r\n      </CarouselContainer>\r\n    </>\r\n  );\r\n};\r\n","import { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_APP, IStore } from '../../../redux/constants';\r\nimport getRandomProducts from '../../../utils/get-random-number';\r\nimport { IProducts } from '../../../utils/interfaces';\r\nimport { Product } from './Product';\r\n\r\nconst ContentContainer = styled.section`\r\n  width: 80%;\r\n  min-height: 600px;\r\n  background-color: white;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  justify-content: space-evenly;\r\n  border-radius: 130px 130px 0 0;\r\n  box-shadow: 0px 0px 15px 15px #ffffff;\r\n  position: relative;\r\n`;\r\n\r\nconst Header = styled.span`\r\n  color: #757575;\r\n  font-size: 25px;\r\n  position: absolute;\r\n  left: calc(50% - 105px);\r\n  width: 210px;\r\n`;\r\n\r\nconst ButtonGetRandom = styled.button`\r\n  padding: 5px 10px;\r\n  position: absolute;\r\n  right: 100px;\r\n`;\r\n\r\nconst getArrRandomProducts2 = (arrProducts: IProducts[], arrIndex: number[]): IProducts[] => {\r\n  let randomProductArr = [] as IProducts[];\r\n  arrIndex.forEach((elem) => {\r\n    randomProductArr.push(arrProducts[elem]);\r\n  });\r\n  return randomProductArr;\r\n};\r\n\r\nexport const MainContent: React.FC = () => {\r\n  const dispatch = useDispatch();\r\n  const listProducts = useSelector((store: IStore) => store.productReducer.products);\r\n  const randomIndexes = useSelector((store: IStore) => store.appReducer.randomIndexes);\r\n  const [randomProducts, setRandomProducts] = useState<IProducts[]>([]);\r\n\r\n  useEffect(() => {\r\n    const randomProducts = getArrRandomProducts2(listProducts, randomIndexes);\r\n    setRandomProducts(randomProducts);\r\n  }, [listProducts]);\r\n\r\n  const getNewRandomProducts = (): void => {\r\n    const randomIndexes = getRandomProducts();\r\n    dispatch({\r\n      type: ACTIONS_APP.RANDOM_INDEXS,\r\n      randomIndexes,\r\n    });\r\n    const randomProducts = getArrRandomProducts2(listProducts, randomIndexes);\r\n    setRandomProducts(randomProducts);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContentContainer>\r\n        <Header> Random Products</Header>\r\n        <ButtonGetRandom onClick={getNewRandomProducts}>I'm Feeling Lucky</ButtonGetRandom>\r\n        {randomIndexes.length !== 0\r\n          ? randomProducts.map((elem) => {\r\n              return <Product key={elem.id} product={elem} />;\r\n            })\r\n          : null}\r\n      </ContentContainer>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_APP, ACTIONS_CATEGORIES, ACTIONS_PRODUCTS } from '../../redux/constants';\r\nimport getRandomProducts from '../../utils/get-random-number';\r\nimport { Carousel } from './Carousel/Carousel';\r\nimport { MainContent } from './MainContent';\r\n\r\nconst MainContainer = styled.main`\r\n  margin: 100px auto 70px;\r\n`;\r\n\r\nexport const Main = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch({\r\n      type: ACTIONS_CATEGORIES.GET_CATEGORIES,\r\n    });\r\n    dispatch({\r\n      type: ACTIONS_PRODUCTS.GET_PRODUCTS,\r\n    });\r\n    const randomIndexes = getRandomProducts();\r\n    dispatch({\r\n      type: ACTIONS_APP.RANDOM_INDEXS,\r\n      randomIndexes,\r\n    });\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <MainContainer>\r\n        <Carousel />\r\n        <MainContent />\r\n      </MainContainer>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_APP, IStore } from '../../redux/constants';\r\nimport { mainColor } from '../../utils/colors';\r\nimport getID from '../../utils/get-random-id';\r\nimport { OrderItem } from './OrderItem';\r\n\r\nconst OrderContainer = styled.section`\r\n  min-height: calc(100vh - 150px);\r\n  margin: 100px auto 70px;\r\n  width: 80%;\r\n  text-align: center;\r\n`;\r\n\r\nconst OrdersHeader = styled.h1`\r\n  color: ${mainColor};\r\n  font-size: 30px;\r\n`;\r\n\r\nconst EmptyOrderText = styled.h1`\r\n  font-size: 30px;\r\n  color: ${mainColor};\r\n`;\r\n\r\nexport const UserOrder = (): JSX.Element => {\r\n  const userEmail = useSelector((store: IStore) => store.loginReducer.userEmail);\r\n  const userOrders = useSelector((store: IStore) => store.appReducer.userOrders);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch({ type: ACTIONS_APP.GET_USER_ORDERS, userEmail });\r\n  }, [dispatch, userEmail]);\r\n\r\n  return (\r\n    <OrderContainer>\r\n      <OrdersHeader>Order's List</OrdersHeader>\r\n      {userOrders.length > 0 ? (\r\n        userOrders.map((order) => {\r\n          return <OrderItem key={getID()} orderItem={order} />;\r\n        })\r\n      ) : (\r\n        <EmptyOrderText>You don't have any order</EmptyOrderText>\r\n      )}\r\n    </OrderContainer>\r\n  );\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport { Redirect, Route, Switch } from 'react-router-dom';\r\n\r\nimport { IStore } from '../redux/constants';\r\nimport { AdminPanel } from './AdminPanel';\r\nimport { Products } from './AdminPanel/Products/Products';\r\nimport { CurrentUser } from './AdminPanel/Users';\r\nimport { Users } from './AdminPanel/Users/Users';\r\nimport { Basket } from './Basket';\r\nimport { Category } from './Category';\r\nimport { Main } from './Main';\r\nimport { UserOrder } from './UserOrders';\r\nexport const AppRouter = (): JSX.Element => {\r\n  const isAdminLogin = useSelector((store: IStore) => store.loginReducer.isAdminLogin);\r\n  const isUserLogin = useSelector((store: IStore) => store.loginReducer.isUserLogin);\r\n  return (\r\n    <>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <Redirect to=\"/main\" />\r\n        </Route>\r\n        <Route exact path=\"/main\">\r\n          <Main />\r\n        </Route>\r\n        <Route exact path=\"/category/:category\">\r\n          <Category />\r\n        </Route>\r\n        <Route exact path=\"/basket\">\r\n          <Basket />\r\n        </Route>\r\n        {isUserLogin && (\r\n          <Route path=\"/orders\">\r\n            <UserOrder />\r\n          </Route>\r\n        )}\r\n        {isAdminLogin ? (\r\n          <>\r\n            <Route exact path=\"/admin-panel\">\r\n              <AdminPanel />\r\n            </Route>\r\n            <Route exact path=\"/admin-panel/users\">\r\n              <Users />\r\n            </Route>\r\n            <Route exact path=\"/admin-panel/users/:userEmail\">\r\n              <CurrentUser />\r\n            </Route>\r\n            <Route exact path=\"/admin-panel/products\">\r\n              <Products />\r\n            </Route>\r\n          </>\r\n        ) : (\r\n          <Redirect to=\"/main\" />\r\n        )}\r\n      </Switch>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { ACTIONS_APP, IStore } from '../../redux/constants';\r\n\r\nimport { mainColor } from '../../utils/colors';\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #000000cc;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  height: 250px;\r\n  padding-bottom: 50px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #b0b0b0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 15px 15px 0 0;\r\n`;\r\n\r\nconst Information = styled.p`\r\n  font-size: 25px;\r\n  width: 85%;\r\n  text-align: center;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 300px;\r\n  height: 70px;\r\n  background-color: ${mainColor};\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  border-radius: 0 0 15px 15px;\r\n`;\r\n\r\nconst ButtonAction = styled.button`\r\n  width: 120px;\r\n  height: 35px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst TextArea = styled.textarea`\r\n  height: 160px;\r\n  width: 230px;\r\n  margin-top: 10px;\r\n  padding: 15px;\r\n  font-size: 15px;\r\n  resize: none;\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  color: red;\r\n  font-size: 25px;\r\n`;\r\n\r\nconst onClickContent = (e: React.MouseEvent<HTMLDivElement>): void => {\r\n  e.stopPropagation();\r\n};\r\n\r\ninterface IModalProps {\r\n  closeModalAuthorMessage(): void;\r\n}\r\n\r\nexport const ModalAuthorMessage: React.FC<IModalProps> = ({ closeModalAuthorMessage }) => {\r\n  const errorMessage = useSelector((store: IStore) => store.appReducer.error);\r\n  const information = useSelector((store: IStore) => store.appReducer.information);\r\n  const [message, setMessage] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const writeMessage = (event: React.ChangeEvent<HTMLTextAreaElement>): void => {\r\n    setMessage(event.target.value);\r\n  };\r\n\r\n  const sendMessageToAuthor = (): void => {\r\n    dispatch({ type: ACTIONS_APP.SEND_MESSAGE_TO_AUTHOR, sendMessageAuthor: message });\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (information) {\r\n      alert(`${information}`);\r\n      closeModalAuthorMessage();\r\n    }\r\n  }, [information]);\r\n\r\n  useEffect(() => {\r\n    return (): void => {\r\n      dispatch({ type: ACTIONS_APP.SEND_INFO_TG_FAILURE, orderError: '' });\r\n      dispatch({ type: ACTIONS_APP.SEND_MESSAGE_TO_AUTHOR_SUCCESS, information: '' });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <>\r\n      <Background onClick={closeModalAuthorMessage}>\r\n        <ContentContainer onClick={onClickContent}>\r\n          <Information>Do you want send me a message?</Information>\r\n          <TextArea value={message} onChange={writeMessage} />\r\n          {errorMessage && <ErrorMessage></ErrorMessage>}\r\n        </ContentContainer>\r\n        <ButtonContainer onClick={onClickContent}>\r\n          <ButtonAction onClick={closeModalAuthorMessage}> Cancel</ButtonAction>\r\n          <ButtonAction onClick={sendMessageToAuthor}>Send</ButtonAction>\r\n        </ButtonContainer>\r\n      </Background>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { mainColor } from '../../utils/colors';\r\nimport { ModalAuthorMessage } from '../Modal/ModalAuthorMessage';\r\n\r\nconst FooterContaier = styled.footer`\r\n  width: 100%;\r\n  height: 50px;\r\n  bottom: 0px;\r\n  margin: 0 auto;\r\n  box-shadow: 0px 3px 10px 5px #535252;\r\n  border-radius: 50px 50px 0 0;\r\n  color: #a8a8a8;\r\n  background-color: ${mainColor};\r\n  z-index: 5;\r\n  position: relative;\r\n`;\r\n\r\nconst ContentContainer = styled.div`\r\n  width: 50%;\r\n  height: 100%;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: space-evenly;\r\n`;\r\n\r\nconst LogoGithubLink = styled.img`\r\n  width: 30px;\r\n  height: 30px;\r\n`;\r\n\r\nconst LogoTeachMeSkills = styled.img`\r\n  width: 200px;\r\n  height: 30px;\r\n`;\r\n\r\nconst Text = styled.p`\r\n  color: #ffffff;\r\n`;\r\n\r\nconst Link = styled.a`\r\n  text-decoration: none;\r\n  transition: all 0.5s ease;\r\n  &:hover {\r\n    transform: rotate(-5deg);\r\n  }\r\n`;\r\n\r\nconst WriteContainer = styled.div`\r\n  width: 100px;\r\n  height: 30px;\r\n  position: absolute;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  right: 150px;\r\n  cursor: pointer;\r\n  transition: all 0.5s ease;\r\n  &:hover {\r\n    transform: scale(1.2);\r\n    color: yellow;\r\n  }\r\n`;\r\n\r\nexport const Footer = (): JSX.Element => {\r\n  const [isOpenAuthorMessageModal, setIsOpenAuthorMessageModal] = useState(false);\r\n\r\n  const openAuthorModalMessage = (): void => {\r\n    setIsOpenAuthorMessageModal(true);\r\n  };\r\n\r\n  const closeAuthorModalMessage = (): void => {\r\n    setIsOpenAuthorMessageModal(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {' '}\r\n      {isOpenAuthorMessageModal && <ModalAuthorMessage closeModalAuthorMessage={closeAuthorModalMessage} />}\r\n      <FooterContaier>\r\n        <ContentContainer>\r\n          <Link href=\"https://linkedin.com/in/alexey-krupenia\" target=\"_blank\">\r\n            <Text> Alexey Krupenia</Text>\r\n          </Link>\r\n          <Link href=\"https://github.com/NewAlexey\" target=\"_blank\">\r\n            <LogoGithubLink src=\"./img/logo-github.svg\" />\r\n          </Link>\r\n          <Link href=\"https://teachmeskills.by/\" target=\"_blank\">\r\n            <LogoTeachMeSkills src=\"./img/logo-teach-me-skills.svg\" />\r\n          </Link>\r\n          <WriteContainer onClick={openAuthorModalMessage}>Write me!</WriteContainer>\r\n        </ContentContainer>\r\n      </FooterContaier>\r\n    </>\r\n  );\r\n};\r\n","import { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport './style.scss';\r\nimport { mainColor } from '../../../utils/colors';\r\nimport { NavLink, useHistory } from 'react-router-dom';\r\nimport { useEffect } from 'react';\r\nimport { ACTIONS_LOGIN, IStore } from '../../../redux/constants';\r\n\r\nconst LoginContainer = styled.div`\r\n  width: 200px;\r\n  height: 35px;\r\n  border-left: 1px solid ${mainColor};\r\n  border-bottom: 1px solid ${mainColor};\r\n  border-right: 1px solid ${mainColor};\r\n  border-radius: 0 0 20px 25px;\r\n  position: absolute;\r\n  font-size: 19px;\r\n  right: -10%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #000;\r\n  cursor: default;\r\n`;\r\n\r\nconst LogoutContainer = styled.div`\r\n  width: 75px;\r\n  height: 25px;\r\n  border-left: 1px solid ${mainColor};\r\n  border-bottom: 1px solid ${mainColor};\r\n  border-right: 1px solid ${mainColor};\r\n  border-radius: 0 0 20px 25px;\r\n  position: absolute;\r\n  font-size: 15px;\r\n  right: -6%;\r\n  top: 35px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  &:hover {\r\n    background-color: ${mainColor};\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst Ul = styled.ul`\r\n  width: 60%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  list-style-type: none;\r\n`;\r\n\r\nconst Li = styled.li`\r\n  width: 33%;\r\n`;\r\n\r\nconst CustomNavLink = styled(NavLink)`\r\n  font-size: 25px;\r\n  height: 50px;\r\n  text-decoration: none;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 0 0 25px 25px;\r\n  transition: all 0.2s ease-in;\r\n  &:hover {\r\n    background-color: ${mainColor};\r\n    color: white;\r\n  }\r\n`;\r\n\r\nexport const HeaderAdmin = (): JSX.Element => {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const isAdminLogin = useSelector((store: IStore) => store.loginReducer.isAdminLogin);\r\n\r\n  useEffect(() => {\r\n    if (isAdminLogin) {\r\n      history.push('/admin-panel');\r\n    }\r\n  }, [history, isAdminLogin]);\r\n\r\n  const logoutAdmin = (): void => {\r\n    dispatch({ type: ACTIONS_LOGIN.APP_LOGOUT_ADMIN });\r\n    history.push('/main');\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Ul>\r\n        <Li>\r\n          <CustomNavLink exact to=\"/admin-panel\" activeClassName=\"active-class-li\">\r\n            Admin Panel\r\n          </CustomNavLink>\r\n        </Li>\r\n        <Li>\r\n          <CustomNavLink exact to=\"/admin-panel/products\" activeClassName=\"active-class-li\">\r\n            Products\r\n          </CustomNavLink>\r\n        </Li>\r\n        <Li>\r\n          <CustomNavLink exact to=\"/admin-panel/users\" activeClassName=\"active-class-li\">\r\n            Users\r\n          </CustomNavLink>\r\n        </Li>\r\n        <LoginContainer>admin</LoginContainer>\r\n        <LogoutContainer onClick={logoutAdmin}>Logout</LogoutContainer>\r\n      </Ul>\r\n    </>\r\n  );\r\n};\r\n","import React, { useEffect } from 'react';\r\nimport { useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_LOGIN, IStore } from '../../../redux/constants';\r\nimport { mainColor } from '../../../utils/colors';\r\nimport { IExistUserLoginInfo } from '../../../utils/interfaces';\r\n\r\nconst ContentContainer = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  height: 250px;\r\n  padding-bottom: 30px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #b0b0b0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 15px 15px 0 0;\r\n`;\r\n\r\nconst Information = styled.p`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst InfoText = styled.p`\r\n  font-size: 20px;\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst InputLoginInfo = styled.input`\r\n  padding-left: 15px;\r\n  height: 30px;\r\n  font-size: 20px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 300px;\r\n  height: 70px;\r\n  background-color: ${mainColor};\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  border-radius: 0 0 15px 15px;\r\n`;\r\n\r\nconst ButtonAction = styled.button`\r\n  width: 120px;\r\n  height: 35px;\r\n  font-size: 20px;\r\n`;\r\n\r\nconst ChangeModalType = styled.div`\r\n  width: 85px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: 4%;\r\n  right: 3%;\r\n  cursor: pointer;\r\n  color: ${mainColor};\r\n  transition: all 0.3s ease-in;\r\n  &:hover {\r\n    color: whitesmoke;\r\n    background-color: ${mainColor};\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  font-size: 20px;\r\n  position: absolute;\r\n  color: red;\r\n  bottom: 15px;\r\n`;\r\n\r\nconst onClickContent = (e: React.MouseEvent<HTMLDivElement>): void => {\r\n  e.stopPropagation();\r\n};\r\n\r\ninterface IModalLoginExistUser {\r\n  closeModalLogin(): void;\r\n  changeModalType(): void;\r\n}\r\n\r\nexport const ModalLoginUser: React.FC<IModalLoginExistUser> = ({ closeModalLogin, changeModalType }) => {\r\n  const [email, setLogin] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const dispatch = useDispatch();\r\n  const refInput = useRef<HTMLInputElement>(null);\r\n  const errorMessage = useSelector((store: IStore) => store.loginReducer.error);\r\n  const isUserLogin = useSelector((store: IStore) => store.loginReducer.isUserLogin);\r\n\r\n  useEffect(() => {\r\n    (refInput.current as HTMLInputElement).focus();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const pressEnter = (ev: KeyboardEvent): void => {\r\n      if (ev.key === 'Enter') {\r\n        const existUserInfo = { email, password } as IExistUserLoginInfo;\r\n        dispatch({ type: ACTIONS_LOGIN.APP_LOGIN_EXIST_USER, existUserInfo });\r\n      }\r\n    };\r\n\r\n    window.addEventListener('keydown', pressEnter);\r\n    \r\n    return () => {\r\n      dispatch({ type: ACTIONS_LOGIN.APP_LOGIN_FAILURE, error: '' });\r\n      window.removeEventListener('keydown', pressEnter);\r\n    };\r\n  }, [dispatch, email, password]);\r\n\r\n  useEffect(() => {\r\n    if (isUserLogin) {\r\n      closeModalLogin();\r\n    }\r\n  }, [isUserLogin]);\r\n\r\n  const loginExistUser = async (e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\r\n    e.stopPropagation();\r\n    const existUserInfo = { email, password } as IExistUserLoginInfo;\r\n    dispatch({ type: ACTIONS_LOGIN.APP_LOGIN_EXIST_USER, existUserInfo });\r\n  };\r\n\r\n  const inputLoginData = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setLogin(e.target.value);\r\n  };\r\n\r\n  const inputPasswordData = (e: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContentContainer onClick={onClickContent}>\r\n        {errorMessage && <ErrorMessage>{errorMessage}</ErrorMessage>}\r\n        <ChangeModalType onClick={changeModalType}> New User </ChangeModalType>\r\n        <Information>Log in </Information>\r\n        <InfoText> Email </InfoText>\r\n        <InputLoginInfo onChange={inputLoginData} value={email} ref={refInput} />\r\n        <InfoText> Password </InfoText>\r\n        <InputLoginInfo type=\"password\" onChange={inputPasswordData} value={password} />\r\n      </ContentContainer>\r\n      <ButtonContainer onClick={onClickContent}>\r\n        <ButtonAction onClick={closeModalLogin}> Cancel</ButtonAction>\r\n        <ButtonAction onClick={loginExistUser}> Login</ButtonAction>\r\n      </ButtonContainer>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useRef } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { ACTIONS_LOGIN, IStore } from '../../../redux/constants';\r\n\r\nimport { mainColor } from '../../../utils/colors';\r\nimport { INewUserLoginInfo } from '../../../utils/interfaces';\r\nimport { checkEmail } from '../../../utils/validate-email-order';\r\n\r\nconst ContentContainer = styled.div`\r\n  position: relative;\r\n  width: 300px;\r\n  height: 470px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  background-color: #b0b0b0;\r\n  justify-content: center;\r\n  align-items: center;\r\n  border-radius: 15px 15px 0 0;\r\n`;\r\n\r\nconst Information = styled.p`\r\n  font-size: 30px;\r\n`;\r\n\r\nconst InfoText = styled.p`\r\n  font-size: 20px;\r\n  padding: 10px 0;\r\n`;\r\n\r\nconst InputLoginInfo = styled.input`\r\n  padding-left: 15px;\r\n  height: 30px;\r\n  font-size: 20px;\r\n  margin-bottom: 5px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  width: 300px;\r\n  height: 70px;\r\n  background-color: ${mainColor};\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n  border-radius: 0 0 15px 15px;\r\n`;\r\n\r\nconst ButtonAction = styled.button`\r\n  width: 120px;\r\n  height: 35px;\r\n  font-size: 20px;\r\n`;\r\n\r\ninterface IButtonLogin {\r\n  isTrueData: boolean;\r\n}\r\n\r\nconst ButtonLogin = styled.button<IButtonLogin>`\r\n  width: 120px;\r\n  height: 35px;\r\n  font-size: 20px;\r\n  ${({ isTrueData }): string => (isTrueData ? '' : 'opacity: 0.5; pointer-events: none')}\r\n`;\r\n\r\nconst ChangeModalType = styled.div`\r\n  width: 85px;\r\n  height: 30px;\r\n  border-radius: 10px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  position: absolute;\r\n  top: 3%;\r\n  right: 2%;\r\n  cursor: pointer;\r\n  color: ${mainColor};\r\n  transition: all 0.3s ease-in;\r\n  &:hover {\r\n    color: whitesmoke;\r\n    background-color: ${mainColor};\r\n  }\r\n`;\r\n\r\nconst ErrorMessage = styled.p`\r\n  font-size: 20px;\r\n  color: red;\r\n  position: absolute;\r\n  bottom: 1%;\r\n  text-align: center;\r\n`;\r\n\r\nconst onClickContent = (e: React.MouseEvent<HTMLDivElement>): void => {\r\n  e.stopPropagation();\r\n};\r\n\r\ninterface IModalLoginExistUser {\r\n  closeModalLogin(): void;\r\n  changeModalType(): void;\r\n}\r\n\r\nexport const ModalRegistrationUser: React.FC<IModalLoginExistUser> = ({ closeModalLogin, changeModalType }) => {\r\n  const [newUserData, setNewUserData] = useState<INewUserLoginInfo>({\r\n    firstName: '',\r\n    lastName: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n  const [isTrueData, setIsTrueData] = useState(false);\r\n  const [isTrueErrorMessage, setIsTrueErrorMessage] = useState(false);\r\n  const dispatch = useDispatch();\r\n  const isUserLogin = useSelector((store: IStore) => store.loginReducer.isUserLogin);\r\n  const errorMessage = useSelector((store: IStore) => store.loginReducer.error);\r\n  const refInput = useRef<HTMLInputElement>(null);\r\n\r\n  const loginNewUser = async (e: React.MouseEvent<HTMLButtonElement>): Promise<void> => {\r\n    e.stopPropagation();\r\n    dispatch({ type: ACTIONS_LOGIN.APP_LOGIN_NEW_USER, newUserInfo: newUserData });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const pressEnter = (ev: KeyboardEvent): void => {\r\n      if (ev.key === 'Enter') {\r\n        dispatch({ type: ACTIONS_LOGIN.APP_LOGIN_NEW_USER, newUserInfo: newUserData });\r\n      }\r\n    };\r\n    window.addEventListener('keydown', pressEnter);\r\n    return () => {\r\n      dispatch({ type: ACTIONS_LOGIN.APP_LOGIN_FAILURE, error: '' });\r\n      window.removeEventListener('keydown', pressEnter);\r\n    };\r\n  }, [dispatch, newUserData]);\r\n\r\n  useEffect(() => {\r\n    if (isUserLogin) {\r\n      closeModalLogin();\r\n    }\r\n  }, [closeModalLogin, isUserLogin]);\r\n\r\n  useEffect(() => {\r\n    (refInput.current as HTMLInputElement).focus();\r\n    return () => {\r\n      const emptyUserData = { firstName: '', lastName: '', email: '', password: '' };\r\n      setNewUserData(emptyUserData);\r\n      setIsTrueData(false);\r\n      setIsTrueErrorMessage(false);\r\n      dispatch({\r\n        type: ACTIONS_LOGIN.APP_LOGIN_FAILURE,\r\n        error: '',\r\n      });\r\n    };\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (errorMessage) {\r\n      setIsTrueErrorMessage(true);\r\n    }\r\n  }, [errorMessage]);\r\n\r\n  useEffect(() => {\r\n    if (\r\n      checkEmail(newUserData.email) &&\r\n      newUserData.firstName.length >= 3 &&\r\n      newUserData.lastName.length >= 3 &&\r\n      newUserData.password.length >= 5\r\n    ) {\r\n      setIsTrueData(true);\r\n    }\r\n  }, [newUserData]);\r\n\r\n  const inputOnChange = (event: React.ChangeEvent<HTMLInputElement>): void => {\r\n    setNewUserData({ ...newUserData, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ContentContainer onClick={onClickContent}>\r\n        <ChangeModalType onClick={changeModalType}> Exist User </ChangeModalType>\r\n        <Information>Sign in</Information>\r\n        <InfoText> First Name </InfoText>\r\n        <InputLoginInfo onChange={inputOnChange} value={newUserData.firstName} ref={refInput} name=\"firstName\" />\r\n        <InfoText> Second Name </InfoText>\r\n        <InputLoginInfo onChange={inputOnChange} value={newUserData.lastName} name=\"lastName\" />\r\n        <InfoText> Email </InfoText>\r\n        <InputLoginInfo onChange={inputOnChange} value={newUserData.email} placeholder=\"example@com.by\" name=\"email\" />\r\n        <InfoText> Password </InfoText>\r\n        <InputLoginInfo\r\n          type=\"password\"\r\n          onChange={inputOnChange}\r\n          value={newUserData.password}\r\n          placeholder=\"minimum 5 symbols\"\r\n          name=\"password\"\r\n        />\r\n        {isTrueErrorMessage ? <ErrorMessage>{errorMessage}</ErrorMessage> : null}\r\n      </ContentContainer>\r\n      <ButtonContainer onClick={onClickContent}>\r\n        <ButtonAction onClick={closeModalLogin}> Cancel</ButtonAction>\r\n        <ButtonLogin onClick={loginNewUser} isTrueData={isTrueData}>\r\n          Login\r\n        </ButtonLogin>\r\n      </ButtonContainer>\r\n    </>\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport { ModalLoginUser } from './ModalLoginUsers';\r\nimport { ModalRegistrationUser } from './ModalLoginUsers';\r\n\r\nconst Background = styled.div`\r\n  position: fixed;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: #000000cc;\r\n  top: 0;\r\n  left: 0;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  z-index: 10;\r\n`;\r\n\r\ninterface IModalProps {\r\n  closeModalLogin(): void;\r\n}\r\n\r\nexport const ModalLogin: React.FC<IModalProps> = ({ closeModalLogin }) => {\r\n  const [newUser, setNewUser] = useState(false);\r\n\r\n  const changeModalType = (): void => {\r\n    setNewUser(!newUser);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Background onClick={closeModalLogin}>\r\n        {!newUser ? (\r\n          <ModalLoginUser closeModalLogin={closeModalLogin} changeModalType={changeModalType} />\r\n        ) : (\r\n          <ModalRegistrationUser closeModalLogin={closeModalLogin} changeModalType={changeModalType} />\r\n        )}\r\n      </Background>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect } from 'react';\r\nimport { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router-dom';\r\nimport styled from 'styled-components';\r\n\r\nimport { ACTIONS_APP } from '../../../../redux/constants';\r\nimport { mainColor } from '../../../../utils/colors';\r\n\r\nconst CategoriesSideMenu = styled.div`\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  transition: all 0.5s ease-out;\r\n  align-items: center;\r\n  margin: 20px 0;\r\n  padding: 13px 30px;\r\n  text-align: center;\r\n  &:hover {\r\n    background: linear-gradient(90deg, rgba(141, 51, 218, 1) 0%, rgba(53, 0, 212, 1) 100%);\r\n    color: #ffffff;\r\n  }\r\n`;\r\n\r\nconst SelectedCategorySideMenu = styled(CategoriesSideMenu)`\r\n  background: linear-gradient(90deg, rgba(141, 51, 218, 1) 0%, rgba(53, 0, 212, 1) 100%);\r\n  color: #ffffff;\r\n`;\r\n\r\nconst CategoriesHeader = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  padding: 0 20px;\r\n  text-transform: uppercase;\r\n  cursor: pointer;\r\n  transition: all 0.5s ease-out;\r\n  border-radius: 0 0 50px 50px;\r\n  text-align: center;\r\n  color: black;\r\n  box-shadow: 0px 3px 10px 5px rgba(53, 0, 212, 0.3);\r\n  &:hover {\r\n    background-color: ${mainColor};\r\n    color: #ffffff;\r\n    box-shadow: 0px 3px 10px 5px rgba(255, 255, 255, 0.3);\r\n  }\r\n`;\r\n\r\nconst SelectedCategoryHeader = styled(CategoriesHeader)`\r\n  background-color: ${mainColor};\r\n  color: #ffffff;\r\n  box-shadow: 0px 3px 10px 5px rgba(255, 255, 255, 0.3);\r\n`;\r\n\r\ninterface ICategory {\r\n  catName: string;\r\n  selectCategory: string;\r\n  isHeader: boolean;\r\n}\r\n\r\nexport const Category: React.FC<ICategory> = ({ catName, selectCategory, isHeader }) => {\r\n  const [isCurrentCategory, setIsCurrentCategory] = useState(false);\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    selectCategory === catName ? setIsCurrentCategory(true) : setIsCurrentCategory(false);\r\n    return () => {\r\n      setIsCurrentCategory(false);\r\n    };\r\n  }, [selectCategory, catName]);\r\n\r\n  const goToCategory = (): void => {\r\n    const currentCategory = catName;\r\n    dispatch({\r\n      type: ACTIONS_APP.CURRENT_CATEGORY,\r\n      currentCategory,\r\n    });\r\n    history.push(`/category/${catName}`);\r\n  };\r\n\r\n  const returnCategoriesSideMenu = (): JSX.Element =>\r\n    !isCurrentCategory ? (\r\n      <CategoriesSideMenu onClick={goToCategory}>{catName}</CategoriesSideMenu>\r\n    ) : (\r\n      <SelectedCategorySideMenu onClick={goToCategory}>{catName}</SelectedCategorySideMenu>\r\n    );\r\n\r\n  const returnCategoriesHeaderMenu = (): JSX.Element =>\r\n    !isCurrentCategory ? (\r\n      <CategoriesHeader onClick={goToCategory}>{catName}</CategoriesHeader>\r\n    ) : (\r\n      <SelectedCategoryHeader onClick={goToCategory}>{catName}</SelectedCategoryHeader>\r\n    );\r\n\r\n  return <>{isHeader ? returnCategoriesHeaderMenu() : returnCategoriesSideMenu()}</>;\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport { CSSProperties, useState } from 'react';\r\nimport styled from 'styled-components';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHome, faShoppingBasket } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport getID from '../../../utils/get-random-id';\r\nimport { IStore, ACTIONS_APP, ACTIONS_LOGIN } from '../../../redux/constants';\r\nimport { mainColor } from '../../../utils/colors';\r\nimport { ModalLogin } from '../../Modal/ModalLogin';\r\nimport { Category } from './Category';\r\n\r\nconst HeaderContaier = styled.header`\r\n  width: 80%;\r\n  height: 50px;\r\n  position: absolute;\r\n  top: 0px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nconst HeaderContent = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  margin: 0 90px;\r\n  display: flex;\r\n  border-radius: 0 0 50px 50px;\r\n  color: #a8a8a8;\r\n`;\r\n\r\nconst HomeStyle = {\r\n  position: 'absolute',\r\n  fontSize: '35px',\r\n  color: '#8d33da',\r\n  top: '45px',\r\n  left: '7%',\r\n  cursor: 'pointer',\r\n} as CSSProperties;\r\n\r\nconst BasketStyle = {\r\n  position: 'absolute',\r\n  fontSize: '35px',\r\n  color: '#8d33da',\r\n  cursor: 'pointer',\r\n} as CSSProperties;\r\n\r\nconst BasketContainer = styled.div`\r\n  position: absolute;\r\n  width: 50px;\r\n  height: 50px;\r\n  right: 78px;\r\n  top: 44px;\r\n`;\r\n\r\nconst CountProductInBasket = styled.p`\r\n  width: 25px;\r\n  height: 24px;\r\n  position: absolute;\r\n  background-color: white;\r\n  top: -8px;\r\n  right: -8px;\r\n  border-radius: 50%;\r\n  text-align: center;\r\n`;\r\n\r\nconst UserLoginContainer = styled.div`\r\n  position: absolute;\r\n  right: -18px;\r\n`;\r\n\r\nconst LoginContainerWithUserName = styled.div`\r\n  width: 200px;\r\n  height: 45px;\r\n  border-left: 1px solid ${mainColor};\r\n  border-bottom: 1px solid ${mainColor};\r\n  border-right: 1px solid ${mainColor};\r\n  border-radius: 0 0 20px 25px;\r\n  position: absolute;\r\n  font-size: 19px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: #000;\r\n  cursor: default;\r\n  text-align: center;\r\n  box-shadow: 0px 3px 10px 5px rgb(53 0 212 / 30%);\r\n`;\r\n\r\nconst LoginContainer = styled(LoginContainerWithUserName)`\r\n  cursor: pointer;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  right: -220px;\r\n  box-shadow: 0px 3px 10px 5px rgb(53 0 212 / 30%);\r\n  &:hover {\r\n    background-color: ${mainColor};\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst LogoutContainer = styled.div`\r\n  width: 75px;\r\n  height: 25px;\r\n  border-left: 1px solid ${mainColor};\r\n  border-bottom: 1px solid ${mainColor};\r\n  border-right: 1px solid ${mainColor};\r\n  border-radius: 0 0 20px 25px;\r\n  position: absolute;\r\n  font-size: 15px;\r\n  right: -185px;\r\n  top: 45px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  color: #000;\r\n  transition: all 0.3s ease-in;\r\n  box-shadow: 0px 3px 10px 5px rgb(53 0 212 / 30%);\r\n  &:hover {\r\n    background-color: ${mainColor};\r\n    color: #fff;\r\n  }\r\n`;\r\n\r\nconst OrdersContainer = styled(LogoutContainer)`\r\n  right: -100px;\r\n`;\r\n\r\nconst Logo = styled.img`\r\n  position: absolute;\r\n  width: 120px;\r\n  left: -100px;\r\n  box-shadow: 0px 0px 10px 10px #ffffff;\r\n  cursor: pointer;\r\n  border-radius: 0 0 30px 30px;\r\n`;\r\n\r\nexport const HeaderUser = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const categories = useSelector((store: IStore) => store.categoriesReducer.categories);\r\n  const currentCategory = useSelector((store: IStore) => store.appReducer.currentCategory);\r\n  const productsInBasket = useSelector((store: IStore) => store.appReducer.productsInBasket);\r\n  const userData = useSelector((store: IStore) => store.loginReducer.userFullName);\r\n  const [isLoginModalOpen, setIsOpenModalOpen] = useState(false);\r\n\r\n  const goMainPage = (): void => {\r\n    history.push('/main');\r\n    const currentCategory = '';\r\n    dispatch({\r\n      type: ACTIONS_APP.CURRENT_CATEGORY,\r\n      currentCategory,\r\n    });\r\n  };\r\n\r\n  const goBasketPage = (): void => {\r\n    history.push('/basket');\r\n    dispatch({\r\n      type: ACTIONS_APP.CURRENT_CATEGORY,\r\n      currentCategory: '',\r\n    });\r\n  };\r\n\r\n  const goOrdersList = (): void => {\r\n    dispatch({\r\n      type: ACTIONS_APP.CURRENT_CATEGORY,\r\n      currentCategory: '',\r\n    });\r\n    const userName = userData.split(' ').join('');\r\n    history.push(`/orders/${userName}`);\r\n  };\r\n\r\n  const openLoginModal = (): void => {\r\n    setIsOpenModalOpen(true);\r\n  };\r\n\r\n  const closeModalLogin = (): void => {\r\n    setIsOpenModalOpen(false);\r\n  };\r\n\r\n  const logoutUser = (): void => {\r\n    dispatch({ type: ACTIONS_LOGIN.APP_LOGOUT_USER });\r\n    history.push('/main');\r\n    dispatch({ type: ACTIONS_APP.LOGOUT_USER });\r\n  };\r\n\r\n  return (\r\n    <HeaderContaier>\r\n      <Logo src=\"/logo.png\" onClick={goMainPage} />\r\n      {isLoginModalOpen && <ModalLogin closeModalLogin={closeModalLogin} />}\r\n      <FontAwesomeIcon icon={faHome} style={HomeStyle} onClick={goMainPage} />\r\n      <BasketContainer>\r\n        <FontAwesomeIcon icon={faShoppingBasket} style={BasketStyle} onClick={goBasketPage} />\r\n        <CountProductInBasket>{productsInBasket.length}</CountProductInBasket>\r\n      </BasketContainer>\r\n\r\n      {userData ? (\r\n        <UserLoginContainer>\r\n          <LoginContainerWithUserName>{userData}</LoginContainerWithUserName>\r\n          <OrdersContainer onClick={goOrdersList}>Orders</OrdersContainer>\r\n          <LogoutContainer onClick={logoutUser}>Logout</LogoutContainer>\r\n        </UserLoginContainer>\r\n      ) : (\r\n        <LoginContainer onClick={openLoginModal}>Login</LoginContainer>\r\n      )}\r\n\r\n      <HeaderContent>\r\n        {categories.map((elem) => {\r\n          return <Category key={getID()} catName={elem} selectCategory={currentCategory} isHeader={true} />;\r\n        })}\r\n      </HeaderContent>\r\n    </HeaderContaier>\r\n  );\r\n};\r\n","import { useSelector } from 'react-redux';\r\nimport styled from 'styled-components';\r\n\r\nimport { IStore } from '../../redux/constants';\r\nimport { HeaderAdmin } from './HeaderAdmin';\r\nimport { HeaderUser } from './HeaderUser';\r\n\r\nconst HeaderContaier = styled.header`\r\n  width: 80%;\r\n  height: 50px;\r\n  position: absolute;\r\n  top: 0px;\r\n  margin: 0 auto;\r\n  display: flex;\r\n  justify-content: center;\r\n`;\r\n\r\nexport const Header = (): JSX.Element => {\r\n  const isAdminLogin = useSelector((store: IStore) => store.loginReducer.isAdminLogin);\r\n\r\n  return (\r\n    <>\r\n      <HeaderContaier>{isAdminLogin ? <HeaderAdmin /> : <HeaderUser />}</HeaderContaier>\r\n    </>\r\n  );\r\n};\r\n","import { useSelector, useDispatch } from 'react-redux';\r\nimport styled from 'styled-components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faLock, faLockOpen } from '@fortawesome/free-solid-svg-icons';\r\nimport { CSSProperties, useState } from 'react';\r\nimport { useEffect } from 'react';\r\n\r\nimport { Category } from '../Header/HeaderUser/Category';\r\nimport getID from '../../utils/get-random-id';\r\nimport { mainColor } from '../../utils/colors';\r\nimport { ACTIONS_APP, IStore } from '../../redux/constants';\r\n\r\ninterface ISideMenuContainer {\r\n  isFreezeSideMenu: boolean;\r\n  scroll: boolean;\r\n}\r\n\r\nconst SideMenuContainer = styled.nav<ISideMenuContainer>`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  width: 175px;\r\n  height: 100%;\r\n  position: fixed;\r\n  ${({ scroll }): string => (scroll ? 'left: -150px;' : 'left: -200px;')}\r\n  top: 0px;\r\n  background-color: ${mainColor};\r\n  border-radius: 0 25px 25px 0;\r\n  box-shadow: 0px 3px 10px 5px rgba(141, 51, 218, 0.3);\r\n  transition: all 0.8s ease;\r\n  ${({ isFreezeSideMenu }): string =>\r\n    !isFreezeSideMenu\r\n      ? `\r\n  &:hover {\r\n    left: 0px;\r\n    border-radius: 0 100px 100px 0;\r\n    box-shadow: 5px 0px 25px 5px #535252;\r\n  }`\r\n      : 'left: 0px;'}\r\n`;\r\n\r\nconst LockContainer = styled.div`\r\n  position: absolute;\r\n  width: 22px;\r\n  height: 22px;\r\n  left: 20px;\r\n  top: 10px;\r\n`;\r\n\r\nconst CategoriesContainer = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n`;\r\n\r\nconst faLockStyle = {\r\n  transition: 'color 0.5s ease-in-out',\r\n  fontSize: '20px',\r\n  color: 'black',\r\n  cursor: 'pointer',\r\n} as CSSProperties;\r\n\r\nexport const SideMenu = (): JSX.Element => {\r\n  const dispatch = useDispatch();\r\n  const [scroll, setScroll] = useState(0);\r\n  const categories = useSelector((store: IStore) => store.categoriesReducer.categories);\r\n  const isFreezeSideMenu = useSelector((store: IStore) => store.appReducer.isFreezeSideMenu);\r\n  const currentCategory = useSelector((store: IStore) => store.appReducer.currentCategory);\r\n  const isAdminLogin = useSelector((store: IStore) => store.loginReducer.isAdminLogin);\r\n\r\n  useEffect(() => {\r\n    const handleScroll = (): void => {\r\n      if (isFreezeSideMenu) {\r\n        return;\r\n      } else {\r\n        setScroll(window.scrollY);\r\n      }\r\n    };\r\n    window.addEventListener('scroll', handleScroll);\r\n    return () => window.addEventListener('scroll', handleScroll);\r\n  }, [isFreezeSideMenu]);\r\n\r\n  const freezeSideMenu = (): void => {\r\n    dispatch({ type: ACTIONS_APP.FREEZE_SIDE_MENU });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {!isAdminLogin && (\r\n        <SideMenuContainer isFreezeSideMenu={isFreezeSideMenu} scroll={scroll > 100}>\r\n          <LockContainer onClick={freezeSideMenu}>\r\n            {isFreezeSideMenu ? (\r\n              <FontAwesomeIcon icon={faLock} style={faLockStyle} />\r\n            ) : (\r\n              <FontAwesomeIcon icon={faLockOpen} style={faLockStyle} />\r\n            )}\r\n          </LockContainer>\r\n          <CategoriesContainer>\r\n            {categories.map((elem) => {\r\n              return <Category key={getID()} catName={elem} selectCategory={currentCategory} isHeader={false} />;\r\n            })}\r\n          </CategoriesContainer>\r\n        </SideMenuContainer>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n","import { useSelector } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './App.scss';\nimport { AppRouter } from './components/AppRouter';\nimport { Footer } from './components/Footer/Footer';\nimport { Header } from './components/Header';\nimport { ModalOrder } from './components/Modal';\nimport { SideMenu } from './components/SideMenu';\nimport { IStore } from './redux/constants';\n\nfunction App() {\n  const isOpenModalOrder = useSelector((store: IStore) => store.appReducer.isOpenModalOrder);\n  return (\n    <div className=\"App\">\n      <BrowserRouter>\n        {isOpenModalOrder && <ModalOrder />}\n        <Header />\n        <SideMenu />\n        <AppRouter />\n        <Footer />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import { ACTIONS_CATEGORIES } from '../constants';\n\nexport interface ICategoriesReducer {\n  error: string;\n  categories: string[];\n}\n\ninterface IActionInterface {\n  type: string;\n  categories: string[];\n  error: string;\n}\n\nconst defaultState: ICategoriesReducer = {\n  error: '',\n  categories: [],\n};\n\nexport function categoriesReducer(state = defaultState, action: IActionInterface): ICategoriesReducer {\n  switch (action.type) {\n    case ACTIONS_CATEGORIES.GET_CATEGORIES_SUCCESS: {\n      return { ...state, categories: [...action.categories] };\n    }\n    case ACTIONS_CATEGORIES.GET_CATEGORIES_FAILURE: {\n      return { ...state, error: action.error };\n    }\n    default:\n      return state;\n  }\n}\n","export const discounts = new Map([\r\n  ['Frontend', 0.5],\r\n  ['JavaScript', 0.2],\r\n  ['React', 0.3],\r\n]);\r\n","import { discounts } from '../../utils/discounts';\nimport { IProducts, IProductsBasket, IUserInfo, IUserOrder } from '../../utils/interfaces';\nimport { ACTIONS_APP } from '../constants';\n\nexport interface IAppReducer {\n  error: string;\n  orderTotalMoney: string;\n  isFreezeSideMenu: boolean;\n  isOpenModalOrder: boolean;\n  randomIndexes: number[];\n  currentCategory: string;\n  currentDiscount: number;\n  productsInBasket: IProductsBasket[];\n  listDicsountCode: Map<string, number>;\n  orderError: string;\n  orderStatus: string;\n  isAdminLogin: boolean;\n  userOrders: IUserOrder[];\n  information: string;\n}\n\nexport interface IActionInterface {\n  type: string;\n  error: string;\n  information: string;\n  orderTotalMoney: string;\n  isFreezeSideMenu: boolean;\n  isOpenModalOrder: boolean;\n  randomIndexes: number[];\n  addSelectedProduct: IProducts;\n  deleteSelectedProduct: number;\n  currentCategory: string;\n  currentDiscount: number;\n  productsInBasket: IProductsBasket[];\n  idChangedProduct: number;\n  userInfo: IUserInfo;\n  userEmail: string;\n  userOrders: IUserOrder[];\n  orderError: string;\n  orderStatus: string;\n  isAdminLogin: boolean;\n  sendMessageAuthor: string;\n}\n\nconst defaultState: IAppReducer = {\n  error: '',\n  information: '',\n  orderTotalMoney: '',\n  isFreezeSideMenu: false,\n  isOpenModalOrder: false,\n  currentDiscount: 0,\n  randomIndexes: [],\n  listDicsountCode: discounts,\n  currentCategory: '',\n  productsInBasket: [],\n  orderError: '',\n  orderStatus: '',\n  isAdminLogin: false,\n  userOrders: [],\n};\n\nexport function appReducer(state = defaultState, action: IActionInterface): IAppReducer {\n  switch (action.type) {\n    case ACTIONS_APP.FREEZE_SIDE_MENU: {\n      return { ...state, isFreezeSideMenu: !state.isFreezeSideMenu };\n    }\n    case ACTIONS_APP.IS_OPEN_MODAL_ORDER: {\n      return { ...state, isOpenModalOrder: !state.isOpenModalOrder };\n    }\n    case ACTIONS_APP.CURRENT_CATEGORY: {\n      return { ...state, currentCategory: action.currentCategory };\n    }\n    case ACTIONS_APP.ORDER_TOTAL_MONEY: {\n      return { ...state, orderTotalMoney: action.orderTotalMoney };\n    }\n    case ACTIONS_APP.RANDOM_INDEXS: {\n      return { ...state, randomIndexes: action.randomIndexes };\n    }\n    case ACTIONS_APP.ADD_PRODUCT: {\n      let productsInBasket = {} as IProductsBasket;\n      productsInBasket = { ...action.addSelectedProduct, count: 1 };\n      return { ...state, productsInBasket: [...state.productsInBasket, { ...productsInBasket }] };\n    }\n    case ACTIONS_APP.DELETE_PRODUCT: {\n      const updatedArr = state.productsInBasket.filter((elem) => elem.id !== action.deleteSelectedProduct);\n      return { ...state, productsInBasket: [...updatedArr] };\n    }\n    case ACTIONS_APP.CLEAR_BASKET: {\n      return { ...state, productsInBasket: [] };\n    }\n    case ACTIONS_APP.SET_DISCOUNT: {\n      return { ...state, currentDiscount: action.currentDiscount };\n    }\n    case ACTIONS_APP.PLUS_COUNT_PRODUCT: {\n      const newBasketProduct = state.productsInBasket.map((elem) => {\n        if (elem.id === action.idChangedProduct) {\n          const updatedCountOfProduct = { ...elem };\n          updatedCountOfProduct.count += 1;\n          return updatedCountOfProduct;\n        }\n        return elem;\n      });\n      return { ...state, productsInBasket: [...newBasketProduct] };\n    }\n    case ACTIONS_APP.MINUS_COUNT_PRODUCT: {\n      const newBasketProduct = state.productsInBasket.map((elem) => {\n        if (elem.id === action.idChangedProduct) {\n          const updatedCountOfProduct = { ...elem };\n          updatedCountOfProduct.count -= 1;\n          return updatedCountOfProduct;\n        }\n        return elem;\n      });\n      return { ...state, productsInBasket: [...newBasketProduct] };\n    }\n    case ACTIONS_APP.SEND_INFO_TG_SUCCESS: {\n      return { ...state, orderStatus: action.orderStatus };\n    }\n    case ACTIONS_APP.SEND_INFO_TG_FAILURE: {\n      return { ...state, orderError: action.orderError };\n    }\n    case ACTIONS_APP.GET_USER_ORDERS_SUCCESS: {\n      return { ...state, userOrders: [...action.userOrders] };\n    }\n    case ACTIONS_APP.GET_USER_ORDERS_FAILURE: {\n      return { ...state, error: action.error };\n    }\n    case ACTIONS_APP.LOGOUT_USER: {\n      return { ...state, userOrders: [], currentDiscount: 0 };\n    }\n    case ACTIONS_APP.SEND_MESSAGE_TO_AUTHOR_SUCCESS: {\n      return { ...state, information: action.information };\n    }\n    default:\n      return state;\n  }\n}\n","import { IProducts } from '../../utils/interfaces';\nimport { ACTIONS_PRODUCTS } from '../constants';\n\nexport interface IProductReducer {\n  products: IProducts[];\n  error: string;\n}\n\ninterface IActionInterface {\n  type: string;\n  products: IProducts[];\n  error: string;\n}\n\nconst defaultState: IProductReducer = {\n  products: [],\n  error: '',\n};\n\nexport function productReducer(state = defaultState, action: IActionInterface): IProductReducer {\n  switch (action.type) {\n    case ACTIONS_PRODUCTS.GET_PRODUCTS_SUCCESS: {\n      return { ...state, products: [...action.products] };\n    }\n    case ACTIONS_PRODUCTS.GET_PRODUCTS_FAILURE: {\n      return { ...state, error: action.error };\n    }\n    default:\n      return state;\n  }\n}\n","import { IExistUserLoginInfo, INewUserLogin, INewUserLoginInfo, IUserLogin } from '../../utils/interfaces';\nimport { ACTIONS_LOGIN } from '../constants';\n\nexport interface ILoginReducer {\n  isAdminLogin: boolean;\n  isUserLogin: boolean;\n  userFullName: string;\n  userEmail: string;\n  error: string;\n}\n\nexport interface ILoginActionInterface {\n  type: string;\n  error: string;\n  isAdminLogin: boolean;\n  isUserLogin: boolean;\n  existUserInfo: IExistUserLoginInfo;\n  newUserInfo: INewUserLoginInfo;\n  userData: IUserLogin;\n  newUserLogin: INewUserLogin;\n}\n\nconst defaultState: ILoginReducer = {\n  isAdminLogin: false,\n  isUserLogin: false,\n  userFullName: '',\n  userEmail: '',\n  error: '',\n};\n\nexport function loginReducer(state = defaultState, action: ILoginActionInterface): ILoginReducer {\n  switch (action.type) {\n    case ACTIONS_LOGIN.USER_LOGIN_SUCCESS: {\n      const { userFullName } = action.userData;\n      const { userEmail } = action.userData;\n      console.log(action);\n      return { ...state, userFullName: userFullName, userEmail: userEmail, isUserLogin: true };\n    }\n    case ACTIONS_LOGIN.ADMIN_LOGIN_SUCCESS: {\n      return { ...state, isAdminLogin: action.isAdminLogin };\n    }\n    case ACTIONS_LOGIN.APP_LOGIN_FAILURE: {\n      return { ...state, error: action.error };\n    }\n    case ACTIONS_LOGIN.APP_LOGOUT_ADMIN: {\n      return { ...state, isAdminLogin: !state.isAdminLogin };\n    }\n    case ACTIONS_LOGIN.APP_LOGOUT_USER: {\n      return { ...state, isUserLogin: false, userEmail: '', userFullName: '' };\n    }\n    default:\n      return state;\n  }\n}\n","import { IExistUserData, INewAccAdmin, IProducts } from '../../utils/interfaces';\nimport { ACTIONS_ADMIN_DATA } from '../constants';\n\nexport interface IAdminReducer {\n  error: string;\n  information: string;\n  categoriesList: string[];\n  productsList: IProducts[];\n  usersList: IExistUserData[];\n  changeAccAdminStatus: boolean;\n  changeAccAdminInfo: string;\n}\n\nexport interface IAdminReducerAction {\n  type: string;\n  error: string;\n  information: string;\n  categoriesList: string[];\n  productsList: IProducts[];\n  usersList: IExistUserData[];\n  newAccAdmin: INewAccAdmin;\n  changeAccAdminStatus: boolean;\n  changeAccAdminInfo: string;\n  idDeletedUser: string;\n}\n\nconst defaultState: IAdminReducer = {\n  error: '',\n  information: '',\n  categoriesList: [],\n  productsList: [],\n  usersList: [],\n  changeAccAdminStatus: false,\n  changeAccAdminInfo: '',\n};\n\nexport function adminReducer(state = defaultState, action: IAdminReducerAction): IAdminReducer {\n  switch (action.type) {\n    case ACTIONS_ADMIN_DATA.GET_PRODUCTS_SUCCESS_ADMIN: {\n      return { ...state, productsList: [...action.productsList] };\n    }\n    case ACTIONS_ADMIN_DATA.GET_PRODUCTS_FAILURE_ADMIN: {\n      return { ...state, error: action.error };\n    }\n    case ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA_SUCCESS: {\n      return { ...state, changeAccAdminInfo: action.changeAccAdminInfo };\n    }\n    case ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA_FAILURE: {\n      return { ...state, error: action.error };\n    }\n    case ACTIONS_ADMIN_DATA.GET_USERS_SUCCESS_ADMIN: {\n      return { ...state, usersList: [...action.usersList] };\n    }\n    case ACTIONS_ADMIN_DATA.GET_USERS_FAILURE_ADMIN: {\n      return { ...state, error: action.error };\n    }\n    case ACTIONS_ADMIN_DATA.DELETE_USER_SUCCESS: {\n      return { ...state, information: action.information, usersList: [...action.usersList] };\n    }\n    case ACTIONS_ADMIN_DATA.DELETE_USER_FAILURE: {\n      return { ...state, error: action.error };\n    }\n    default:\n      return state;\n  }\n}\n","import { put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { ACTIONS_CATEGORIES } from '../constants';\r\n\r\nfunction* getCategories(): any {\r\n  try {\r\n    const response = yield fetch('https://fakestoreapi.com/products/categories');\r\n    const categories = yield response.json() as string[];\r\n\r\n    yield put({\r\n      type: ACTIONS_CATEGORIES.GET_CATEGORIES_SUCCESS,\r\n      categories,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_CATEGORIES.GET_CATEGORIES_FAILURE,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* getCategoriesSaga() {\r\n  yield takeEvery(ACTIONS_CATEGORIES.GET_CATEGORIES, getCategories);\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { ACTIONS_PRODUCTS } from '../constants';\r\n\r\nfunction* getProduct(): any {\r\n  try {\r\n    const response = yield fetch('https://fakestoreapi.com/products');\r\n    const products = yield response.json();\r\n\r\n    yield put({\r\n      type: ACTIONS_PRODUCTS.GET_PRODUCTS_SUCCESS,\r\n      products,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_PRODUCTS.GET_PRODUCTS_FAILURE,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* getProductsSaga() {\r\n  yield takeEvery(ACTIONS_PRODUCTS.GET_PRODUCTS, getProduct);\r\n}\r\n","import { IUserInfo } from './interfaces';\r\n\r\nexport const getOrderDataForTg = (user: IUserInfo): string => {\r\n  const order = getOrderString(user);\r\n  return `Name: <b>${user.name}</b>\\n\\nEmail: <b>${user.email}</b>\\n\\nPhone: <b>${user.phone}</b>\\n\\n<b>Order</b>\\n${order}\\nTotal Order Money: ${user.totalMoney}\\nOrder Time: ${user.date}`;\r\n};\r\n\r\nconst getOrderString = (user: IUserInfo): string => {\r\n  return user.order.reduce((acc, elem) => {\r\n    acc = `${acc}id: <b>${elem.id}</b>\\nTitle: <i>${elem.title}</i>\\nCount: <b>${elem.count}</b>\\n\\n`;\r\n    return acc;\r\n  }, '');\r\n};\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport { getOrderDataForTg } from '../../utils/get-order-data';\r\n\r\nimport { ACTIONS_APP } from '../constants';\r\nimport { IActionInterface } from '../reducers';\r\n\r\nfunction* sendInfoTg(action: IActionInterface): any {\r\n  try {\r\n    const { userInfo } = yield action;\r\n    const userData = yield getOrderDataForTg(userInfo);\r\n    const data = yield { text: userData, chat_id: 366595308, parse_mode: 'HTML' };\r\n    const JSONdata = yield JSON.stringify(data);\r\n    const request = yield fetch(\r\n      'https://api.telegram.org/bot1740168231:AAEeiWra1eNXSBh0zSkspHL2bAhvgZWNXLc/sendMessage',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSONdata,\r\n      }\r\n    );\r\n    const answer = yield request.json();\r\n    const orderStatus = answer.ok;\r\n    if (!orderStatus) {\r\n      throw Error('Chto-to ne to..')\r\n    }\r\n    yield put({\r\n      type: ACTIONS_APP.SEND_INFO_TG_SUCCESS,\r\n      orderStatus,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_APP.SEND_INFO_TG_FAILURE,\r\n      orderError: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* sendOrderInfoTg() {\r\n  yield takeEvery(ACTIONS_APP.SEND_INFO_TG_REQUEST, sendInfoTg);\r\n}\r\n","const isLocalServerNow = false;\r\n\r\nexport const urlNow = isLocalServerNow ? 'http://localhost:3001/' : 'https://tms-diploma.herokuapp.com/';\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport { urlNow } from '../../utils/settings-file';\r\n\r\nimport { ACTIONS_LOGIN } from '../constants';\r\nimport { IUserLogin } from '../../utils/interfaces';\r\nimport { ILoginActionInterface } from '../reducers/LoginReducer';\r\n\r\nfunction* loginSaga(action: ILoginActionInterface): any {\r\n  const { existUserInfo } = action;\r\n  try {\r\n    const serverResponse = yield fetch(`${urlNow}login`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(existUserInfo),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const responseData = (yield serverResponse.json()) as IUserLogin;\r\n\r\n    if (responseData.isAdminLogin) {\r\n      const { isAdminLogin } = responseData;\r\n      yield put({\r\n        type: ACTIONS_LOGIN.ADMIN_LOGIN_SUCCESS,\r\n        isAdminLogin,\r\n      });\r\n    } else if (responseData.userEmail) {\r\n      const userData = { ...responseData };\r\n      yield put({\r\n        type: ACTIONS_LOGIN.USER_LOGIN_SUCCESS,\r\n        userData,\r\n      });\r\n    } else {\r\n      throw Error(`${responseData.loginInfoData}`);\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_LOGIN.APP_LOGIN_FAILURE,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* loginUserSaga() {\r\n  yield takeEvery(ACTIONS_LOGIN.APP_LOGIN_EXIST_USER, loginSaga);\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport { urlNow } from '../../utils/settings-file';\r\n\r\nimport { ACTIONS_LOGIN } from '../constants';\r\nimport { IResponseCreateNewUser } from '../../utils/interfaces';\r\nimport { ILoginActionInterface } from '../reducers/LoginReducer';\r\n\r\nfunction* registrationSaga(action: ILoginActionInterface): any {\r\n  const { newUserInfo } = action;\r\n  try {\r\n    const responseServer = yield fetch(`${urlNow}login/create-new-user`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(newUserInfo),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n    const responseData = (yield responseServer.json()) as IResponseCreateNewUser;\r\n    const { message } = responseData;\r\n    if (message) {\r\n      throw Error(message);\r\n    } else {\r\n      const userData = { ...responseData };\r\n      yield put({\r\n        type: ACTIONS_LOGIN.USER_LOGIN_SUCCESS,\r\n        userData,\r\n      });\r\n    }\r\n  } catch (err) {\r\n    const error = err.message;\r\n    yield put({\r\n      type: ACTIONS_LOGIN.APP_LOGIN_FAILURE,\r\n      error,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* registrationUserSaga() {\r\n  yield takeEvery(ACTIONS_LOGIN.APP_LOGIN_NEW_USER, registrationSaga);\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\n\r\nimport { ACTIONS_APP } from '../constants';\r\nimport { IActionInterface } from '../reducers';\r\n\r\nfunction* sendMessageToAuthor(action: IActionInterface): any {\r\n  try {\r\n    const { sendMessageAuthor } = yield action;\r\n    const data = yield { text: sendMessageAuthor, chat_id: 366595308 };\r\n    const request = yield fetch(\r\n      'https://api.telegram.org/bot1740168231:AAEeiWra1eNXSBh0zSkspHL2bAhvgZWNXLc/sendMessage',\r\n      {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify(data),\r\n      }\r\n    );\r\n    const answer = yield request.json();\r\n    const orderStatus = answer.ok;\r\n\r\n    if (!orderStatus) {\r\n      throw Error('Chto-to ne to... Sorry');\r\n    }\r\n\r\n    yield put({\r\n      type: ACTIONS_APP.SEND_MESSAGE_TO_AUTHOR_SUCCESS,\r\n      information: 'Thanks for messaging :)',\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_APP.SEND_INFO_TG_FAILURE,\r\n      orderError: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* sendMessageToAuthorSaga() {\r\n  yield takeEvery(ACTIONS_APP.SEND_MESSAGE_TO_AUTHOR, sendMessageToAuthor);\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport { ACTIONS_ADMIN_DATA } from '../../constants';\r\n\r\nfunction* getProducts(): any {\r\n  try {\r\n    const response = yield fetch('https://fakestoreapi.com/products');\r\n    const productsList = yield response.json() as string[];\r\n\r\n    yield put({\r\n      type: ACTIONS_ADMIN_DATA.GET_PRODUCTS_SUCCESS_ADMIN,\r\n      productsList,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_ADMIN_DATA.GET_PRODUCTS_FAILURE_ADMIN,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* getProductsAdminSaga() {\r\n  yield takeEvery(ACTIONS_ADMIN_DATA.GET_PRODUCTS_ADMIN, getProducts);\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport { IChangeAccAdmin } from '../../../utils/interfaces';\r\nimport { urlNow } from '../../../utils/settings-file';\r\nimport { ACTIONS_ADMIN_DATA } from '../../constants';\r\nimport { IAdminReducerAction } from '../../reducers';\r\n\r\nfunction* changeAccAdminData(action: IAdminReducerAction): any {\r\n  const { newAccAdmin } = action;\r\n  try {\r\n    const response = yield fetch(`${urlNow}login/change-admin-account`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(newAccAdmin),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n\r\n    const serverResponse = (yield response.json()) as IChangeAccAdmin;\r\n    const { operationStatus } = yield serverResponse;\r\n\r\n    if (operationStatus) {\r\n      const changeAccAdminInfo = serverResponse.infoMessage;\r\n      yield put({\r\n        type: ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA_SUCCESS,\r\n        changeAccAdminInfo,\r\n      });\r\n    } else {\r\n      const errMessage = serverResponse.errMessage;\r\n      yield put({\r\n        type: ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA_FAILURE,\r\n        error: errMessage,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA_FAILURE,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* changeAccAdminDataSaga() {\r\n  yield takeEvery(ACTIONS_ADMIN_DATA.CHANGE_ACCOUNT_DATA, changeAccAdminData);\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport { IExistUserData } from '../../../utils/interfaces';\r\nimport { urlNow } from '../../../utils/settings-file';\r\nimport { ACTIONS_ADMIN_DATA } from '../../constants';\r\n\r\nfunction* getUsersAdmin(): any {\r\n  try {\r\n    const response = yield fetch(`${urlNow}users/get-all-users-admin`);\r\n    const usersList = yield response.json() as IExistUserData[];\r\n\r\n    yield put({\r\n      type: ACTIONS_ADMIN_DATA.GET_USERS_SUCCESS_ADMIN,\r\n      usersList,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_ADMIN_DATA.GET_USERS_FAILURE_ADMIN,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* getUsersAdminSaga() {\r\n  yield takeEvery(ACTIONS_ADMIN_DATA.GET_USERS_ADMIN, getUsersAdmin);\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport { IDeletedUser } from '../../../utils/interfaces';\r\nimport { urlNow } from '../../../utils/settings-file';\r\nimport { ACTIONS_ADMIN_DATA } from '../../constants';\r\nimport { IAdminReducerAction } from '../../reducers';\r\n\r\nfunction* deleteUserAdmin(action: IAdminReducerAction): any {\r\n  const { idDeletedUser } = action;\r\n  try {\r\n    const serverResponse = yield fetch(`${urlNow}users/${idDeletedUser}`, {\r\n      method: 'DELETE',\r\n      mode: 'cors',\r\n    });\r\n\r\n    const responseJson = (yield serverResponse.json()) as IDeletedUser;\r\n    const { information } = responseJson;\r\n    const { usersList } = responseJson;\r\n\r\n    yield put({\r\n      type: ACTIONS_ADMIN_DATA.DELETE_USER_SUCCESS,\r\n      information,\r\n      usersList,\r\n    });\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_ADMIN_DATA.DELETE_USER_FAILURE,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* deleteUserAdminSaga() {\r\n  yield takeEvery(ACTIONS_ADMIN_DATA.DELETE_USER, deleteUserAdmin);\r\n}\r\n","import { takeEvery } from 'redux-saga/effects';\r\nimport { urlNow } from '../../../utils/settings-file';\r\n\r\nimport { ACTIONS_APP } from '../../constants';\r\nimport { IActionInterface } from '../../reducers';\r\n\r\nfunction* createOrderOnSerer(action: IActionInterface): any {\r\n  const userOrder = yield action.userOrders;\r\n  try {\r\n    yield fetch(`${urlNow}users/set-order`, {\r\n      method: 'POST',\r\n      mode: 'cors',\r\n      body: JSON.stringify(userOrder),\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n    });\r\n  } catch (error) {}\r\n}\r\n\r\nexport function* createOrderOnServerSaga() {\r\n  yield takeEvery(ACTIONS_APP.CREATE_ORDER_ON_SERVER, createOrderOnSerer);\r\n}\r\n","import { put, takeEvery } from 'redux-saga/effects';\r\nimport { IUserOrder } from '../../../utils/interfaces';\r\nimport { urlNow } from '../../../utils/settings-file';\r\n\r\nimport { ACTIONS_APP } from '../../constants';\r\nimport { IActionInterface } from '../../reducers';\r\n\r\nfunction* getUserOrders(action: IActionInterface): any {\r\n  const userEmail = yield action.userEmail;\r\n  try {\r\n    const responseServer = yield fetch(`${urlNow}users/${userEmail}`);\r\n    const userOrders = (yield responseServer.json()) as IUserOrder[];\r\n    if (userOrders.length > 0) {\r\n      yield put({\r\n        type: ACTIONS_APP.GET_USER_ORDERS_SUCCESS,\r\n        userOrders,\r\n      });\r\n    } else {\r\n      throw Error('No orders yet.');\r\n    }\r\n  } catch (error) {\r\n    yield put({\r\n      type: ACTIONS_APP.GET_USER_ORDERS_FAILURE,\r\n      error: error.message,\r\n    });\r\n  }\r\n}\r\n\r\nexport function* getUsersOrdersSaga() {\r\n  yield takeEvery(ACTIONS_APP.GET_USER_ORDERS, getUserOrders);\r\n}\r\n","import { applyMiddleware, combineReducers, createStore } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\n\nimport { appReducer, productReducer, categoriesReducer, loginReducer, adminReducer } from './reducers';\nimport {\n  getCategoriesSaga,\n  getProductsSaga,\n  sendOrderInfoTg,\n  loginUserSaga,\n  registrationUserSaga,\n  sendMessageToAuthorSaga,\n} from './sagas';\nimport {\n  getProductsAdminSaga,\n  changeAccAdminDataSaga,\n  getUsersAdminSaga,\n  deleteUserAdminSaga,\n} from './sagas/AdminSaga';\nimport { createOrderOnServerSaga, getUsersOrdersSaga } from './sagas/UserSaga/';\n\nconst sagaMiddleware = createSagaMiddleware();\n\nexport const store = createStore(\n  combineReducers({\n    appReducer,\n    productReducer,\n    categoriesReducer,\n    loginReducer,\n    adminReducer,\n    deleteUserAdminSaga,\n  }),\n  applyMiddleware(sagaMiddleware)\n);\n\nsagaMiddleware.run(getCategoriesSaga);\nsagaMiddleware.run(getProductsSaga);\nsagaMiddleware.run(sendOrderInfoTg);\nsagaMiddleware.run(loginUserSaga);\nsagaMiddleware.run(registrationUserSaga);\nsagaMiddleware.run(createOrderOnServerSaga);\nsagaMiddleware.run(getUsersOrdersSaga);\nsagaMiddleware.run(getProductsAdminSaga);\nsagaMiddleware.run(getUsersAdminSaga);\nsagaMiddleware.run(changeAccAdminDataSaga);\nsagaMiddleware.run(deleteUserAdminSaga);\nsagaMiddleware.run(sendMessageToAuthorSaga);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}